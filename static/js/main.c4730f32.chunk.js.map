{"version":3,"sources":["redux/constants.js","redux/actions.js","ui/AddDeleteButton.js","ui/MuscleTag.js","redux/reducers.js","HOCs/PopUp.js","redux/store.js","editor/Exercise.js","ui/FlexCardRow.js","editor/AddExerciseForm.js","editor/ExerciseList.js","editor/SplitItem.js","editor/Split.js","editor/WorkoutPlan.js","editor/Editor.js","ui/Confirm.js","settings/Reset.js","settings/RestoreDefaults.js","settings/DisplayedDisks.js","settings/SplitComposerItem.js","settings/SplitComposer.js","settings/Settings.js","start/StartButton.js","start/NextSplit.js","workout/ExerciseItem.js","start/ProtocolEntry.js","start/Protocol.js","start/Start.js","icons/Dumbbell.js","ui/MainMenu.js","ui/PageTemplate.js","workout/CurrentSplit.js","redux/utils.js","workout/Meta.js","workout/Timer.js","workout/Disc.js","workout/Weights.js","App.js","workout/Workout.js","export/Export.js","registerServiceWorker.js","index.js"],"names":["C","ADD_SPLIT","EDIT_SPLIT","DELETE_SPLIT","ADD_EXERCISE","SET_SPLITINDEX","START_WORKOUT","SET_CURRENT_EXERCISE","FINISH_WORKOUT","CANCEL_WORKOUT","ADD_WORKOUT","SELECT_EXERCISE","UNSELECT_EXERCISE","ADD_HISTORY_ENTRY","CHANGE_WEIGHT","TOGGLE_ADD_EXERCISE_FORM","CHANGE_TIMER_SETTINGS","RESTORE_DEFAULT_SETTINGS","SHOW_POPUP","HIDE_POPUP","CHANGE_DISPLAYED_DISCS","defaults","LOCALSTORAGE_NAME","SET_AMOUNT","defaultSettings","timeBetweenSets","timeBetweenExercises","displayedDiscs","muscles","CHEST","BACK","LEGS","BIZEPS","TRIZEPS","SHOULDER","ABS","muscleLabels","muscleColors","addExercise","name","type","id","v4","selected","timestamp","Date","now","selectExercise","unselectExercise","addSplit","exercises","editSplit","deleteSplit","changeWeight","exerciseId","weight","setCurrentExercise","restoreDefaultSettings","showPopUp","hidePopUp","changeDisplayedDiscs","discs","AddDeleteButton","deleteMode","props","baseStyle","display","cursor","borderRadius","padding","margin","selectedStyle","border","opacity","unselectedStyle","backgroundColor","color","MuscleTag","m","muscle","style","className","ComposedComponent","showAddExerciseForm","state","action","historyEntry","exercise","split","find","indexOf","filter","e","store","createStore","combineReducers","logger","console","log","settings","map","splits","s","workout","item","splitIndex","ui","popUpId","history","localStorage","JSON","parse","undefined","Exercise","flexCardContainer","onClick","dispatch","cardStyleClasses","i","key","join","flexCardRow","FlexCardRow","children","Array","isArray","c","AddExerciseForm","_muscle","_name","toggleView","ref","el","placeholder","defaultValue","value","disabled","Object","keys","k","ExerciseList","getState","SplitItem","verticalAlign","Split","allExercises","splitExercises","ex","WorkoutPlan","Editor","isWorkoutEmpty","length","Confirm","onAccept","f","onDecline","onHide","message","stopPropagation","isVisible","Reset","setTimeout","clear","window","location","reload","RestoreDefaults","DisplayedDiscs","input","v","width","sort","n1","n2","d","n","generateSplitName","string","lastIndex","lastIndexOf","SplitComposerItem","unselectedMuscles","reselectExercises","forEach","maxWidth","newMuscles","onMuscleTagClick","onUnselectedMuscleTagClick","SplitComposer","values","reduce","c1","c2","Settings","DisplayedDisks","buttonStyle","fontSize","StartButton","NextSplit","ExerciseItem","current","activate","fontWeight","textAlign","ProtocolEntry","day","entries","historyData","Protocol","recordsPerDay","h","toLocaleDateString","days","Start","to","textDecoration","Dumbbell","height","viewBox","fill","transform","activeStyle","borderBottom","icon","mdIcon","isActive","match","isExact","pathname","MainMenu","PageTemplate","CurrentSplit","selectCurrentExercise","activateNextSplit","nextIndex","setSplitIndex","Meta","getLastWeightOfExercise","Timer","period","start","bind","reset","finish","this","setState","intervalId","setInterval","forceUpdate","clearInterval","timeLeft","Math","floor","toFixed","padStart","Component","Disc","addWeight","cx","cy","r","stroke","strokeWidth","x","y","textAnchor","dy","Weights","sum","selectedDiscs","accumulator","currentValue","acc","cv","parseSumToDiscs","a","b","confirmCallback","Workout","cancel","isPaused","clearTimeout","timeout","mappedExercises","startWorkout","hash","when","Export","userSelect","stringify","protocol","host","exerciseUrl","setup","tags","addWorkout","fetch","then","response","json","data","reverse","confirmMessage","confirmTransition","callback","App","subscribe","getItem","obj","getUserConfirmation","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","addEventListener","preventDefault","deferredPrompt","prompt","userChoice","choiceResult","outcome","ReactDOM","render","document","getElementById","URL","process","origin","status","headers","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c4730f32.chunk.js","sourcesContent":["const C = {\n    ADD_SPLIT: \"ADD_SPLIT\",\n    EDIT_SPLIT: \"EDIT_SPLIT\",\n    DELETE_SPLIT: \"DELETE_SPLIT\",\n    ADD_EXERCISE: \"ADD_EXERCISE\",\n    SET_SPLITINDEX: \"SET_SPLITINDEX\",\n    START_WORKOUT: \"START_WORKOUT\",\n    SET_CURRENT_EXERCISE: \"SET_CURRENT_EXERCISE\",\n    FINISH_WORKOUT: \"FINISH_WORKOUT\",\n    CANCEL_WORKOUT: \"CANCEL_WORKOUT\",\n    ADD_WORKOUT: \"ADD_WORKOUT\",\n    SELECT_EXERCISE: \"SELECT_EXERCISE\",\n    UNSELECT_EXERCISE: \"UNSELECT_EXERCISE\",\n    ADD_HISTORY_ENTRY: \"ADD_HISTORY_ENTRY\",\n    CHANGE_WEIGHT: \"CHANGE_WEIGHT\",\n    TOGGLE_ADD_EXERCISE_FORM: \"TOGGLE_ADD_EXERCISE_FORM\",\n    CHANGE_TIMER_SETTINGS: \"CHANGE_TIMER_SETTINGS\",\n    RESTORE_DEFAULT_SETTINGS: \"RESTORE_DEFAULT_SETTINGS\",\n    SHOW_POPUP: \"SHOW_POPUP\",\n    HIDE_POPUP: \"HIDE_POPUP\",\n    CHANGE_DISPLAYED_DISCS: \"CHANGE_DISPLAYED_DISCS\",\n};\n\nexport default C;\n\nexport const defaults = {\n    LOCALSTORAGE_NAME: 'localWeights',\n    SET_AMOUNT: 3\n}\n\nexport const defaultSettings = {\n    timeBetweenSets: 1000 * 60,\n    timeBetweenExercises: 1000 * 60 * 3,\n    displayedDiscs: [20, 10, 5, 4, 2.5, 2, 1, 0.5]\n}\n\nexport const muscles = {\n    CHEST: \"CHEST\",\n    BACK: \"BACK\",\n    LEGS: \"LEGS\",\n    BIZEPS: \"BIZEPS\",\n    TRIZEPS: \"TRIZEPS\",\n    SHOULDER: \"SHOULDER\",\n    ABS: \"ABS\"\n}\n\nexport const muscleLabels = {\n    CHEST: \"Brust\",\n    BACK: \"Rücken\",\n    LEGS: \"Beine\",\n    BIZEPS: \"Bizeps\",\n    TRIZEPS: \"Trizeps\",\n    SHOULDER: \"Schultern\",\n    ABS: \"Bauch\"\n}\n\nexport const muscleColors = {\n    CHEST: \"blue\",\n    BACK: \"green\",\n    LEGS: \"red\",\n    BIZEPS: \"pink\",\n    TRIZEPS: \"purple\",\n    SHOULDER: \"yellow\",\n    ABS: \"indigo\"\n}","import C, { defaultSettings } from './constants';\nimport { v4 } from 'uuid';\n\nexport const addExercise = (name, muscles) => ({\n    type: C.ADD_EXERCISE,\n    id: v4(),\n    name,\n    selected: false,\n    muscles,\n    timestamp: Date.now()\n});\n\nexport const selectExercise = (id, name, muscles) => ({\n    type: C.SELECT_EXERCISE,\n    id, name, muscles\n});\n\nexport const unselectExercise = (id, name, muscles) => ({\n    type: C.UNSELECT_EXERCISE,\n    id, name, muscles\n});\n\nexport const addWorkout = (name = \"Mein Plan\") => ({\n    type: C.ADD_WORKOUT,\n    id: v4(),\n    name,\n    timestamp: Date.now(),\n    tags: [],\n    splits: []\n});\n\nexport const toggleAddExerciseForm = () => ({ type: C.TOGGLE_ADD_EXERCISE_FORM });\n\nexport const addSplit = (name = \"split\", muscles = []) => ({\n    type: C.ADD_SPLIT,\n    name,\n    id: v4(),\n    exercises: [],\n    muscles\n});\n\nexport const editSplit = (id, name, muscles = []) => ({\n    type: C.EDIT_SPLIT,\n    id, name, muscles\n});\n\nexport const deleteSplit = id => ({\n    type: C.DELETE_SPLIT,\n    id\n});\n\nexport const setSplitIndex = splitIndex => ({\n    type: C.SET_SPLITINDEX,\n    splitIndex\n});\n\nexport const changeWeight = (exerciseId, weight) => ({\n    type: C.CHANGE_WEIGHT,\n    exerciseId, weight\n})\n\nexport const startWorkout = (exercises = []) => {\n    const exerciseId = [...exercises.map(e => e.id), \"\"][0];\n\n    return {\n        type: C.START_WORKOUT,\n        exercises, exerciseId\n    }\n}\n\nexport const setCurrentExercise = id => ({\n    type: C.SET_CURRENT_EXERCISE, id\n})\n\n\nexport const cancelWorkout = () => ({\n    type: C.CANCEL_WORKOUT\n});\n\nexport const finishWorkout = (splitIndex, splits = []) => ({\n    type: C.FINISH_WORKOUT,\n    splitIndex: (splitIndex + 1 % splits.length),\n    timestamp: Date.now()\n});\n\nexport const addHistoryEntry = (exerciseId, weight) => ({\n    type: C.ADD_HISTORY_ENTRY,\n    id: v4(),\n    exerciseId,\n    weight,\n    timestamp: Date.now()\n});\n\nexport const changeTimerSettings = (timeBetweenSets, timeBetweenExercises) => ({\n    type: C.CHANGE_TIMER_SETTINGS,\n    timeBetweenExercises, timeBetweenSets\n});\n\nexport const restoreDefaultSettings = () => ({\n    type: C.RESTORE_DEFAULT_SETTINGS,\n    defaults: defaultSettings\n});\n\nexport const showPopUp = id => ({\n    type: C.SHOW_POPUP,\n    id\n});\n\nexport const hidePopUp = () => ({\n    type: C.HIDE_POPUP\n});\n\nexport const changeDisplayedDiscs = discs => ({\n    type: C.CHANGE_DISPLAYED_DISCS,\n    discs\n});","import React from 'react'\n\nconst AddDeleteButton = ({ deleteMode, ...props }) => (\n    <div {...props}>\n        {\n            deleteMode ?\n                (<span>&times;</span>) :\n                (<span>&#x0002B;</span>)\n        }\n    </div>\n);\n\nexport default AddDeleteButton;","import React from 'react'\nimport { muscleColors } from '../redux/constants';\n\nconst color = m => muscleColors[m];\nconst baseStyle = {\n    display: \"inline-block\",\n    cursor: \"pointer\",\n    borderRadius: \"4px\",\n    padding: \"2px\",\n    margin: \"2px\",\n};\nconst selectedStyle = {\n    border: \"1px solid currentColor!important\",\n    opacity: 0.6\n};\nconst unselectedStyle = {\n    border: \"1px dashed black\",\n    backgroundColor: \"white\",\n    color: \"black\"\n};\n\nconst MuscleTag = ({ muscle, selected = true, ...props }) => (\n    <span\n        {...props}\n        style={{ ...baseStyle, ...(selected ? selectedStyle : unselectedStyle) }}\n        className={\n            selected ?\n                `w3-small w3-${color(muscle)} ${props.className}` :\n                props.className\n        } >\n        {muscle}\n    </span >\n);\n\nexport default MuscleTag;","import C from './constants';\n\nexport const logger = (state, action) => {\n    console.log(\"dispatch\", action.type);\n    return null;\n}\n\nexport const workout = (state = {}, action) => {\n    switch (action.type) {\n        case C.SET_CURRENT_EXERCISE:\n            return {\n                ...state,\n                exerciseId: action.id\n            }\n        case C.START_WORKOUT:\n            console.log(action)\n            return {\n                exercises: action.exercises,\n                exerciseId: action.exerciseId\n            }\n        case C.CHANGE_WEIGHT:\n            return {\n                ...state,\n                exercises: state.exercises.map(\n                    item => item.id !== action.exerciseId ?\n                        item : { ...item, weight: action.weight }\n                )\n            }\n        case C.FINISH_WORKOUT:\n        case C.CANCEL_WORKOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const exercises = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_EXERCISE:\n            return [\n                exercise(state, action),\n                ...state\n            ];\n        case C.SELECT_EXERCISE:\n        case C.UNSELECT_EXERCISE:\n            return state.map(\n                e => exercise(e, action)\n            );\n        default:\n            return state;\n    }\n};\n\nexport const splitIndex = (state = 0, action) => {\n    switch (action.type) {\n        case C.SET_SPLITINDEX:\n            return action.splitIndex\n        default:\n            return state;\n    }\n}\n\n// TODO: start from defaults but restore settings OR\n// TODO: store defaults in component props\nexport const settings = (state = {}, action) => {\n    switch (action.type) {\n        case C.CHANGE_TIMER_SETTINGS:\n            return {\n                ...state,\n                timeBetweenSets: action.timeBetweenSets,\n                timeBetweenExercises: action.timeBetweenExercises\n            }\n        case C.CHANGE_DISPLAYED_DISCS:\n            return {\n                ...state,\n                displayedDiscs: action.discs\n            }\n        case C.RESTORE_DEFAULT_SETTINGS:\n            return {\n                ...action.defaults\n            }\n        default:\n            return state;\n    }\n}\n\nexport const ui = (state = {}, action) => {\n    switch (action.type) {\n        case C.TOGGLE_ADD_EXERCISE_FORM:\n            return {\n                ...state,\n                showAddExerciseForm: showAddExerciseForm(state.showAddExerciseForm, action)\n            }\n        case C.SHOW_POPUP:\n            return {\n                ...state,\n                popUpId: action.id\n            }\n        case C.HIDE_POPUP:\n            return {\n                ...state,\n                popUpId: \"\"\n            }\n        default:\n            return {\n                ...state,\n                showAddExerciseForm: showAddExerciseForm(state.showAddExerciseForm, action),\n                popUpId: \"\"\n            };\n    }\n}\n\nexport const showAddExerciseForm = (state = false, action) => {\n    switch (action.type) {\n        case C.TOGGLE_ADD_EXERCISE_FORM:\n            return !state\n        default:\n            return state;\n    }\n}\n\nexport const history = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_HISTORY_ENTRY:\n            return [\n                historyEntry(state, action),\n                ...state\n            ];\n        default:\n            return state;\n    }\n};\n\nexport const historyEntry = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_HISTORY_ENTRY:\n            return {\n                id: action.id,\n                exerciseId: action.exerciseId,\n                weight: action.weight,\n                timestamp: action.timestamp\n            }\n        default:\n            return state;\n    }\n}\n\nexport const exercise = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_EXERCISE:\n            let { name, muscles, id, timestamp } = action\n            return { name, muscles, id, timestamp }\n        case C.SELECT_EXERCISE:\n            return (state.id !== action.id) ?\n                state :\n                { ...state, selected: true }\n        case C.UNSELECT_EXERCISE:\n            return (state.id !== action.id) ?\n                state :\n                { ...state, selected: false }\n        default:\n            return state;\n    }\n};\n\nexport const splits = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_SPLIT:\n            return [\n                ...state,\n                split(state, action)\n            ];\n        case C.EDIT_SPLIT:\n            return state.map(s =>\n                split(s, action)\n            );\n        case C.DELETE_SPLIT:\n            return state.filter(split =>\n                split.id !== action.id\n            );\n        case C.SELECT_EXERCISE:\n        case C.UNSELECT_EXERCISE:\n            return state.map(\n                s => split(s, action)\n            );\n        default:\n            return state;\n    }\n};\n\nexport const split = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_SPLIT:\n            return {\n                name: action.name,\n                id: action.id,\n                exercises: action.exercises,\n                muscles: action.muscles\n            };\n        case C.EDIT_SPLIT:\n            return state.id !== action.id ? {\n                ...state\n            } : {\n                    ...state,\n                    name: action.name,\n                    muscles: action.muscles\n                };\n        case C.SELECT_EXERCISE:\n            return !state.muscles.find(muscle => (action.muscles.indexOf(muscle) > -1)) ?\n                state :\n                {\n                    ...state,\n                    exercises: [\n                        ...state.exercises, action.id\n                    ]\n                }\n        case C.UNSELECT_EXERCISE:\n            return {\n                ...state,\n                exercises: state.exercises.filter(e => e !== action.id)\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport const weights = (state = [], action) => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n\nexport const weight = (state = {}, action) => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport './PopUp.css';\n\n\nexport default ComposedComponent => ({ isVisible, ...props }) => {\n    return (\n        <div className={`pop-up w3-padding w3-white w3-display-container ${isVisible ? \"visible\" : \"\"}`} >\n            <div className=\"w3-display-topright w3-padding\"\n                style={{ cursor: \"pointer\" }}\n                onClick={e => { e.stopPropagation(); props.onHide() }} >\n                <span className=\"w3-xlarge\">\n                    &times;\n                   </span>\n            </div>\n            <ComposedComponent {...props} />\n        </div >\n    );\n}","import { combineReducers, createStore } from 'redux';\nimport { exercises, history, logger, settings, splitIndex, ui, splits, workout } from './reducers';\n\nconst store = createStore(combineReducers({\n    logger,\n    settings,\n    exercises,\n    splits,\n    workout,\n    splitIndex,\n    ui,\n    history,\n}), (\n    localStorage['localWeights']) ?\n    JSON.parse(localStorage['localWeights']) :\n    undefined\n);\n\nexport default store","import React from 'react'\nimport { unselectExercise, selectExercise } from '../redux/actions';\nimport AddDeleteButton from '../ui/AddDeleteButton';\nimport MuscleTag from '../ui/MuscleTag';\nimport { flexCardContainer, cardStyleClasses } from '../App';\nimport store from '../redux/store'\n\nconst Exercise = ({ id, name, muscles, selected }) => {\n    const toggleSelect = ()=> store.dispatch(\n        selected ? \n        unselectExercise(id, name, muscles):\n        selectExercise(id, name, muscles)\n    );\n    \n    return (\n        <div className={flexCardContainer}>\n            <div \n                onClick={toggleSelect}\n                style ={{cursor: \"pointer\"}}\n                className={`${cardStyleClasses} w3-display-container\n                ${selected ? \"w3-blue\" : \"\"}\n                `}>\n                <p>{name}</p>\n                <AddDeleteButton \n                    className=\"w3-display-topright w3-padding, w3-button\n                    w3-hover-blue w3-large\"\n                    deleteMode={selected}/>\n                {muscles.map((m, i)=> (\n                    <MuscleTag muscle={m} key={i}/>\n                ))}\n            </div>\n        </div>\n);}\n\nexport default Exercise;","import React from 'react'\n\nexport const cardStyleClasses = [\"w3-card\", \"w3-left-align\", \"w3-padding\", \"w3-display-container\"].join(' ');\nexport const flexCardRow = [\"w3-row\"].join(' ');\nexport const flexCardContainer = [\"w3-col\", \"s12 m12 l4\", \"w3-padding\"].join(' ');\n\nconst FlexCardRow = ({ children }) => (\n    <div className={flexCardRow}>\n        {\n            Array.isArray(children) ?\n                children.filter(i => i).map(\n                    (c, i) => (\n                        <div className={flexCardContainer} key={i}>\n                            {c}\n                        </div>\n                    )\n                ) : (\n                    <div className={flexCardContainer}>\n                        {children}\n                    </div>\n                )\n        }\n    </div>\n);\n\nexport default FlexCardRow;","import React from 'react';\nimport { addExercise } from '../redux/actions';\nimport { muscles } from '../redux/constants';\nimport { cardStyleClasses } from '../ui/FlexCardRow';\nimport store from '../redux/store'\n\nconst AddExerciseForm = ({ toggleView }) => {\n    let _muscle, _name;\n    const submit = () => {\n        if (!_muscle.value || !_name.value) return;\n        store.dispatch(addExercise(_name.value, [_muscle.value]));\n        _name.value = _muscle.value = null\n    }\n\n    const cancel = () => {\n        _name.value = null;\n        _muscle.value = \"default\";\n        toggleView();\n    }\n\n    return (\n        <div className=\"w3-padding\">\n            <div className={cardStyleClasses}>\n                <input\n                    ref={el => _name = el}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className=\"w3-input\" />\n                <select\n                    defaultValue=\"default\"\n                    ref={el => _muscle = el}\n                    className=\"w3-select w3-white\">\n                    <option value=\"default\" disabled >Muskelgruppe</option>\n                    {\n                        Object.keys(muscles).map(\n                            (k, i) => (\n                                <option value={muscles[k]} key={i}>\n                                    {muscles[k]}\n                                </option>\n                            )\n                        )\n                    }\n                </select>\n                <input type=\"button\" value=\"Hinzufügen\" className=\"w3-button\" onClick={submit} />\n                <input type=\"button\" value=\"Abbrechen\" className=\"w3-button\" onClick={cancel} />\n            </div>\n        </div >\n    );\n}\n\nexport default AddExerciseForm;","import React from 'react'\nimport Exercise from './Exercise';\nimport AddDeleteButton from '../ui/AddDeleteButton';\nimport AddExerciseForm from './AddExerciseForm';\nimport { toggleAddExerciseForm } from '../redux/actions';\nimport store from '../redux/store'\n\nconst ExerciseList = ({ exercises = [], className, style }) => {\n    const { showAddExerciseForm } = store.getState().ui\n    const toggleView = () => store.dispatch(toggleAddExerciseForm())\n    return (\n        <div className={className} style={style}>\n            <h2 className=\"w3-display-container\">\n                <span>\n                    Übungen\n            </span>\n                <AddDeleteButton\n                    onClick={toggleView}\n                    style={{ cursor: \"pointer\" }}\n                    deleteMode={showAddExerciseForm}\n                    className=\"w3-display-right\" />\n            </h2>\n            {\n                showAddExerciseForm ?\n                    <AddExerciseForm toggleView={toggleView} /> :\n                    null\n            }\n            {\n                exercises.map((e, i) => (\n                    <Exercise {...e} key={i} />\n                ))\n            }\n        </div>\n    );\n}\n\nexport default ExerciseList;","import React from 'react'\nimport { unselectExercise } from '../redux/actions';\nimport { muscleColors } from '../redux/constants';\nimport store from '../redux/store'\n\nconst SplitItem = ({ id, name, className, muscles=[] }) => (\n    < li className={className + \" w3-display-container\"}>\n        {\n            muscles.map((m, i) => (\n                <span\n                    key={i}\n                    className=\"w3-xlarge\"\n                    style={{\n                        verticalAlign: \"middle\",\n                        color: muscleColors[m]\n                    }}>&bull;</span>))\n        }\n        <span className=\"w3-padding\" >\n            {name}\n        </span>\n        <span className=\"w3-display-right\"\n            onClick={() => store.dispatch(unselectExercise(id))}>\n            <div className=\"w3-padding w3-button w3-hover-blue\n            w3-large\">\n                &times;\n            </div>\n        </span>\n    </li>\n);\n\nexport default SplitItem;","import React from 'react';\nimport SplitItem from './SplitItem';\nimport MuscleTag from '../ui/MuscleTag';\nimport store from '../redux/store'\n\nconst Split = ({ name, muscles, className, style, exercises = [] }) => {\n    // const splitExercises = store.getState().exercises.map(\n    //     e => exercises.indexOf(e.id) > -1 ? e : undefined\n    // ).filter(item => item)\n    const allExercises = store.getState().exercises;\n\n    const splitExercises = exercises.map(\n        e => allExercises.find(ex => ex.id === e)\n    );\n\n    return (\n        <div className={className} style={style}>\n            <h4>{name}</h4>\n            {muscles.map((m, i) => (\n                <MuscleTag muscle={m} key={i} />\n            ))}\n            <ul className=\"w3-ul\">\n                {splitExercises.map((e, i) => (\n                    <SplitItem {...e} key={i} className=\"w3-hover\" />\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Split;","import React from 'react';\nimport Split from './Split';\nimport { flexCardContainer, cardStyleClasses } from '../App';\n\nconst WorkoutPlan = ({ splits = [], className, style }) => (\n    <div className={className} style={style} >\n        <h2>Meine Splits</h2>\n        {splits.map((s, i) => (\n            <div className={`${flexCardContainer}`} key={i}>\n                <Split\n                    {...s}\n                    className={`${cardStyleClasses}`} />\n            </div>\n        ))}\n    </div>\n);\n\nexport default WorkoutPlan;","import React from 'react';\nimport ExerciseList from './ExerciseList';\nimport WorkoutPlan from './WorkoutPlan';\nimport { flexCardRow, cardStyleClasses, flexCardContainer } from '../App';\nimport store from '../redux/store'\n\nconst Editor = () => {\n    const { splits = [] } = store.getState();\n    const exercises = store.getState().exercises;\n    const isWorkoutEmpty = !store.getState().exercises\n        .map(e => e.selected).filter(e => e).length;\n\n    // TODO: splits \n    return (\n        <div>\n            {\n                isWorkoutEmpty ?\n                    (\n                        <div className={flexCardRow + \" w3-border-bottom\"}>\n                            <div className={flexCardContainer}>\n                                <div className={cardStyleClasses}>\n                                    <h3>Willkommen im Editor</h3>\n                                    <p>Hier siehst Du deine Splits und alle Übungen.</p>\n                                    <p>Du kannst die Übungen durch antippen deinem Trainingsplan hinzufügen.</p>\n                                </div>\n                            </div>\n                        </div>\n                    ) : \"\"\n            }\n            <WorkoutPlan\n                splits={splits}\n                className={`${flexCardRow} w3-border-bottom w3-row-padding`} />\n            <ExerciseList exercises={exercises} className=\"w3-row-padding\" />\n        </div>\n    );\n}\n\nexport default Editor;","import React from 'react';\nimport PopUp from '../HOCs/PopUp'\n\nconst _Confirm = ({ onAccept = f => f, onDecline = f => f, onHide = f => f, message }) => (\n    <div className=\"w3-white\" >\n        <p>{message}</p>\n        <div className=\"w3-display-bottomright w3-padding\">\n            <button\n                className=\"w3-button\"\n                onClick={e => {\n                    e.stopPropagation();\n                    onDecline();\n                    onHide();\n                }}>\n                Abbrechen\n            </button>\n            <button\n                className=\"w3-button w3-blue\"\n                onClick={e => {\n                    e.stopPropagation();\n                    onAccept();\n                    onHide();\n                }}>\n                Bestätigen\n            </button>\n        </div>\n    </div>\n);\n\nconst Confirm = PopUp(_Confirm);\n\nexport default Confirm;","import React from 'react'\nimport { defaults } from '../redux/constants';\nimport store from '../redux/store'\nimport { showPopUp, hidePopUp } from '../redux/actions';\nimport Confirm from '../ui/Confirm';\n\n\nconst Reset = ({ className, style }) => {\n\n    const clearLocalStorageAndReload = ()=>setTimeout(() => {\n        localStorage.clear(defaults.LOCALSTORAGE_NAME);\n        window.location.reload();\n    }, 500);\n\n    const id = \"RESET_APP\";\n    const onHide = () => store.dispatch(hidePopUp());\n    const showConfirm = () => store.dispatch(showPopUp(id));\n    const { popUpId } = store.getState().ui;\n    const isVisible = popUpId === id;\n\n\n    return (\n        <div className={className} style={style}\n            onClick={showConfirm}>\n            <span>\n                Reset\n            </span>\n            <Confirm\n                message=\"Die Anwendung komplett zurücksetzen?\"\n                onHide={onHide}\n                isVisible={isVisible}\n                onAccept={clearLocalStorageAndReload} />\n        </div>\n    );\n}\n\nexport default Reset;","import React from 'react';\nimport store from '../redux/store'\nimport { restoreDefaultSettings, showPopUp, hidePopUp } from '../redux/actions';\nimport Confirm from '../ui/Confirm';\n\n\nconst RestoreDefaults = ({ ...props }) => {\n    const restore = () => {\n        store.dispatch(restoreDefaultSettings());\n        window.location.reload();\n    }\n    const id = \"RESTORE_DEFAULTS_POPUP\";\n    const onHide = () => store.dispatch(hidePopUp());\n    const showConfirm = () => store.dispatch(showPopUp(id));\n    const { popUpId } = store.getState().ui;\n    const isVisible = popUpId === id;\n\n    return (\n        <div {...props}>\n            <div onClick={showConfirm}>\n                Restore Defaults\n            </div>\n            <Confirm\n                message=\"Standardwerte wiederherstellen?\"\n                onHide={onHide}\n                isVisible={isVisible}\n                onAccept={restore} />\n        </div>\n    );\n}\n\nexport default RestoreDefaults;","import React from 'react'\nimport store from '../redux/store'\nimport { changeDisplayedDiscs } from '../redux/actions';\n\nconst DisplayedDiscs = ({ ...props }) => {\n\n    let input;\n    const { displayedDiscs } = store.getState().settings;\n    const addWeight = () => store.dispatch(\n        changeDisplayedDiscs([\n            ...displayedDiscs, input.value\n        ].filter(i => i).sort((n1, n2) => n1 === n2 ? 0 : n1 > n2 ? -1 : 1))\n    );\n    const deleteWeight = value => store.dispatch(\n        changeDisplayedDiscs(displayedDiscs.filter(\n            n => n !== value\n        ))\n    );\n\n    return (\n        <div {...props}>\n            <h2>Gewichte anpassen</h2>\n            <input\n                className=\"w3-input\"\n                placeholder=\"neues Gewicht eingeben\"\n                type=\"number\"\n                ref={v => input = v}\n                name=\"newWeight\" />\n            <button className=\"w3-button\" style={{ width: \"100%\" }} onClick={addWeight}>\n                Hinzufügen\n            </button>\n            <ul className=\"w3-ul\">\n                {\n                    displayedDiscs ?\n                        displayedDiscs.map(\n                            (d, i) => (\n                                <li key={i} className=\"w3-display-container\">\n                                    <span>{d}</span>\n                                    <div className=\"w3-display-right w3-padding\"\n                                        onClick={() => deleteWeight(d)} >\n                                        &times;\n                                </div>\n                                </li>\n                            )\n                        ) : undefined\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default DisplayedDiscs;","import React from 'react'\nimport MuscleTag from '../ui/MuscleTag';\nimport store from '../redux/store'\nimport { deleteSplit, addSplit, editSplit, unselectExercise, selectExercise } from '../redux/actions';\nimport { muscleLabels } from '../redux/constants';\n\nconst generateSplitName = (muscles = []) => {\n    const string = muscles\n        .map(m => muscleLabels[m])\n        .join(\", \");\n    const lastIndex = string.lastIndexOf(\",\");\n    return [...string].map((s, i) => i !== lastIndex ? s : \" &\").join('');\n}\n\nconst SplitComposerItem = ({ id, name, muscles = [], unselectedMuscles = [] }) => {\n    const reselectExercises = () => {\n        const { exercises } = store.getState();\n        exercises.forEach(e => {\n            if (e.selected) {\n                const { id, name, muscles } = e;\n                store.dispatch(unselectExercise(id, name, muscles));\n                store.dispatch(selectExercise(id, name, muscles));\n            }\n        });\n    }\n\n    const onUnselectedMuscleTagClick = muscle => {\n        if (!!id) {\n            const newMuscles = [...muscles, muscle];\n            store.dispatch(editSplit(\n                id, generateSplitName(newMuscles), newMuscles))\n            reselectExercises();\n        } else {\n            store.dispatch(addSplit(\n                generateSplitName([muscle]), [muscle]\n            ))\n            reselectExercises();\n        }\n    }\n\n    const onMuscleTagClick = muscle => {\n        const newMuscles = muscles.filter(m => m !== muscle);\n        store.dispatch(editSplit(\n            id, generateSplitName(newMuscles), newMuscles\n        ));\n        if (!newMuscles.length) {\n            store.dispatch(deleteSplit(id));\n        }\n        reselectExercises();\n    }\n\n    return (\n        <li style={{ maxWidth: \"100%\" }} className=\"w3-display-container\">\n            <div\n                onClick={() => store.dispatch(deleteSplit(id))}\n                className=\"w3-display-right w3-padding w3-xlarge w3-button\">\n                <span>&times;</span>\n            </div>\n            <div style={{ width: \"80%\" }}>\n                <h3>{name}</h3>\n                {muscles.map((m, i) => (\n                    <MuscleTag\n                        onClick={() => onMuscleTagClick(m)}\n                        key={i}\n                        muscle={m}\n                        className=\"w3-large\"\n                    />\n                ))}\n                {unselectedMuscles.map((m, i) => (\n                    <MuscleTag\n                        onClick={() => onUnselectedMuscleTagClick(m)}\n                        selected={false}\n                        key={i}\n                        muscle={m}\n                        className=\"w3-large\"\n                    />\n                ))}\n            </div>\n        </li>\n    );\n}\n\nexport default SplitComposerItem;","import React from 'react'\nimport store from '../redux/store'\nimport SplitComposerItem from './SplitComposerItem';\nimport { muscles } from '../redux/constants';\n\nconst SplitComposer = ({ ...props }) => {\n    const { splits } = store.getState();\n    const unselectedMuscles = Object\n        .values(muscles)\n        .filter(m => !(splits\n            .map(s => [...s.muscles])\n            .reduce((c1, c2) => [...c1, ...c2], [])\n            .find(muscle => m === muscle)))\n\n    return (\n        <div  {...props}>\n            <h2>Splits konfigurieren</h2>\n            <ul className=\"w3-ul\">\n                {splits.map((s, i) => (\n                    <SplitComposerItem key={i} {...s}\n                        unselectedMuscles={unselectedMuscles} />\n                ))}\n                {(unselectedMuscles && unselectedMuscles.length) ?\n                    <SplitComposerItem\n                        name=\"neuer Split\"\n                        unselectedMuscles={unselectedMuscles}\n                    /> : null}\n            </ul>\n        </div>\n    );\n}\n\nexport default SplitComposer;","import React from 'react'\nimport FlexCardRow, { cardStyleClasses } from '../ui/FlexCardRow'\nimport Reset from './Reset';\nimport RestoreDefaults from './RestoreDefaults';\nimport DisplayedDisks from './DisplayedDisks';\nimport SplitComposer from './SplitComposer';\n\nconst Settings = () => (\n    <FlexCardRow>\n        <SplitComposer className={cardStyleClasses} />\n        <DisplayedDisks className={cardStyleClasses} />\n        <RestoreDefaults className={cardStyleClasses} />\n        <Reset className={cardStyleClasses} />\n    </FlexCardRow>\n);\n\nexport default Settings;","import React from 'react';\nimport { MdPlayArrow } from 'react-icons/lib/md';\n\nconst buttonStyle = {\n    fontSize: \"2em\"\n};\n\nconst StartButton = ({ className, ...props }) => (\n    <div className={className} {...props}>\n        <MdPlayArrow\n            style={buttonStyle}\n            className=\"w3-circle w3-border w3-margin\" />\n        <span>Jetzt starten</span>\n    </div>\n);\n\nexport default StartButton;","import React from 'react'\nimport store from '../redux/store'\n\nconst NextSplit = ({ ...props }) => {\n\n    const { splitIndex, splits } = store.getState();\n    const split = splits[splitIndex];\n    return (\n        <div {...props}>\n            <span>\n                {\n                    (!!split && !!split.name) ?\n                        `Nächste Einheit: ${split.name}` :\n                        \"Beginne jetzt mit deinem ersten Training\"\n                }\n            </span>\n        </div>\n    );\n}\n\nexport default NextSplit;","import React from 'react'\nimport { muscleColors } from '../redux/constants';\n\nconst ExerciseItem = ({ id, current = false, muscles = [], name, weight, activate = f => f }) => (\n    <li\n        onClick={() => activate(id)}\n        style={{ fontWeight: current ? \"bold\" : \"normal\" }}>\n        <span style={{ width: \"80%\", display: \"inline-block\" }}>\n            {muscles.map((m, i) => (\n                <span\n                    key={i}\n                    className=\"w3-xlarge\"\n                    style={{\n                        verticalAlign: \"middle\",\n                        color: muscleColors[m]\n                    }}>\n                    &bull;\n                </span>\n            ))}\n            <span className=\"w3-padding\" style={{\n                verticalAlign: \"middle\"\n            }}>\n                {name}\n            </span>\n        </span>\n        <span style={{ textAlign: \"right\", width: \"20%\", display: \"inline-block\" }}>\n            {weight} {weight !== undefined ? \"kg\" : \"\"}\n        </span>\n    </li>\n);\n\nexport default ExerciseItem;","import React from 'react'\nimport store from '../redux/store'\nimport ExerciseItem from '../workout/ExerciseItem'\n\n\nconst ProtocolEntry = ({ day = \"\", entries = [], ...props }) => {\n    if (!day || !entries.length)\n        return null\n\n    const { exercises = [] } = store.getState()\n\n    const historyData = entries.map(e => ({\n        ...e,\n        ...exercises.find(ex => ex.id === e.exerciseId)\n    }))\n\n    return (\n        <div {...props}>\n            <h4>{day}</h4>\n            <ul className=\"w3-ul\">\n\n                {historyData.map((item, i) => (\n                    <ExerciseItem {...item} key={i} />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default ProtocolEntry","import React from 'react'\nimport store from '../redux/store';\nimport ProtocolEntry from './ProtocolEntry';\n\nconst Protocol = ({ ...props }) => {\n    const { history = [] } = store.getState()\n\n    if (!history.length)\n        return null\n\n    const recordsPerDay = history\n        .map(h => ({ ...h, day: (new Date(h.timestamp)).toLocaleDateString() }))\n        .reduce((days, item) => {\n            if (!days[item.day])\n                days[item.day] = []\n\n            days[item.day] = [\n                ...days[item.day],\n                item\n            ]\n            return days\n        }, {})\n\n\n    return (\n        <div {...props} >\n            <h3>Trainingsverlauf</h3>\n            {Object.keys(recordsPerDay).map((item, i) => (\n                <ProtocolEntry key={i} day={item} entries={recordsPerDay[item]} />\n            ))}\n        </div>\n    );\n}\n\nexport default Protocol;","import React from 'react';\nimport StartButton from './StartButton';\nimport NextSplit from './NextSplit';\nimport { Link } from 'react-router-dom'\nimport { cardStyleClasses, flexCardRow, flexCardContainer } from '../App';\nimport store from '../redux/store'\nimport { MdEdit } from 'react-icons/lib/md';\nimport FlexCardRow from '../ui/FlexCardRow';\nimport Protocol from './Protocol';\n\nconst Start = () => {\n    const isWorkoutEmpty = !store.getState().exercises.map(e => e.selected).filter(e => e).length;\n\n    if (isWorkoutEmpty)\n        return (\n            <div className={flexCardRow} >\n                <div className={flexCardContainer}>\n                    <div className={cardStyleClasses}>\n                        <Link to=\"/edit\" style={{ textDecoration: \"none\" }}>\n                            <div className=\"w3-display-container\">\n                                <div style={{ width: \"75%\" }}>\n                                    <p>Du hast noch keinen Trainingsplan.</p>\n                                    <p>Erstelle hier deinen ersten Trainingsplan.</p>\n                                </div>\n                                <div\n                                    style={{ padding: \"4px\" }}\n                                    className=\"w3-display-right w3-circle w3-blue\">\n                                    <MdEdit style={{ fontSize: \"3em\" }} />\n                                </div>\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    else\n        return (\n            <FlexCardRow>\n                <div className={cardStyleClasses}>\n                    <h2>Dein Training</h2>\n                    <ul className=\"w3-ul\">\n                        <li className=\"w3-padding\"><NextSplit /></li>\n                    </ul>\n                </div>\n                <div className={`${cardStyleClasses} w3-hover-blue`}>\n                    <Link to=\"/workout\" style={{ textDecoration: \"none\" }} >\n                        <StartButton className=\"w3-large\" />\n                    </Link>\n                </div>\n                <Protocol className={cardStyleClasses} />\n\n            </FlexCardRow>\n        );\n}\n\nexport default Start;","import React from 'react'\n\nconst Dumbbell = ({ style, ...props }) => (\n\n    <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 40 40\"\n        style={{ fill: \"currentColor\", verticalAlign: \"middle\", ...style }}\n        {...props}>\n        <g\n            style={{ display: \"inline\" }}\n            transform=\"translate(0,-24)\">\n            <path\n                d=\"m 9.1455329,32.553657 c -1.2548275,0 -2.2650315,1.010203 -2.2650315,2.265032 V 52.90477 c 0,1.254828 1.010204,2.265032 2.2650315,2.265032 1.2548281,0 2.2650311,-1.010204 2.2650311,-2.265032 v -7.013542 h 16.753424 v 7.013542 c 0,1.254828 1.010204,2.265032 2.265031,2.265032 h 0.07811 c 1.254828,0 2.265032,-1.010204 2.265032,-2.265032 V 34.818689 c 0,-1.254829 -1.010204,-2.265032 -2.265032,-2.265032 h -0.07811 c -1.254827,0 -2.265031,1.010203 -2.265031,2.265032 v 6.87564 H 11.410564 v -6.87564 c 0,-1.254829 -1.010203,-2.265032 -2.2650311,-2.265032 z m -5.0963208,3.452465 c -1.0276604,0 -1.8549827,0.827323 -1.8549827,1.854982 v 11.946333 c 0,1.027661 0.8273223,1.854983 1.8549827,1.854983 1.0276603,0 1.8549826,-0.827322 1.8549826,-1.854983 V 37.861104 c 0,-1.027659 -0.8273223,-1.854982 -1.8549826,-1.854982 z m 31.6323369,0 c -1.02766,0 -1.854983,0.827323 -1.854983,1.854982 v 11.946333 c 0,1.027661 0.827323,1.854983 1.854983,1.854983 1.02766,0 1.854983,-0.827322 1.854983,-1.854983 V 37.861104 c 0,-1.027659 -0.827323,-1.854982 -1.854983,-1.854982 z M 0.67119105,40.368993 c -0.36779425,0 -0.66388854,0.296094 -0.66388854,0.663887 v 5.602781 c 0,0.367794 0.29609429,0.663889 0.66388854,0.663889 0.36779425,0 0.66388845,-0.296095 0.66388845,-0.663889 V 41.03288 c 0,-0.367793 -0.2960942,-0.663887 -0.66388845,-0.663887 z m 38.62269295,0 c -0.38943,0 -0.702942,0.313512 -0.702942,0.702941 v 5.524675 c 0,0.389428 0.313512,0.702941 0.702942,0.702941 0.389429,0 0.702941,-0.313513 0.702941,-0.702941 v -5.524675 c 0,-0.389429 -0.313512,-0.702941 -0.702941,-0.702941 z\" />\n        </g>\n    </svg >\n\n);\n\nexport default Dumbbell;","import React from 'react';\nimport { MdEdit, MdSettings } from 'react-icons/lib/md';\nimport { NavLink } from 'react-router-dom';\nimport Dumbbell from '../icons/Dumbbell.js';\n\nconst activeStyle = {\n    borderBottom: \"4px solid #2395F3\",\n    color: \"#2395F3\"\n}\n\nconst icon = {\n    width: \"1.5em\",\n    margin: \"0.5em\"\n}\n\nconst mdIcon = {\n    fontSize: \"1.25em\",\n}\n\nconst isActive = (match, location) => match.isExact || location.pathname === \"/workout\";\n\nconst MainMenu = () => (\n    <div className=\"w3-bar w3-white\">\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            isActive={isActive}\n            to=\"/\">\n            <Dumbbell style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Start\n            </span>\n        </NavLink>\n        {/* <NavLink\n            activeStyle={activeStyle}\n            style={{textDecoration: \"none\"}}\n            className=\"w3-bar-item\"\n            to=\"/stats\">\n            <img src={chart} style={icon} alt=\"\" />\n            <span className=\"w3-hide-small\">\n                Meine Statistik\n            </span>\n        </NavLink> */}\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            to=\"/edit\">\n            <MdEdit style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Editor\n            </span>\n        </NavLink>\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            to=\"/settings\">\n            <MdSettings style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Einstellungen\n            </span>\n        </NavLink>\n    </div>\n)\n\nexport default MainMenu;","import React from 'react';\n\nimport MainMenu from './MainMenu';\n\nconst PageTemplate = ({ children }) => (\n    <div>\n        <MainMenu />\n        {children}\n    </div>\n)\n\nexport default PageTemplate;","import React from 'react';\nimport { cardStyleClasses } from '../ui/FlexCardRow';\nimport ExerciseItem from './ExerciseItem';\nimport { setCurrentExercise } from '../redux/actions';\nimport store from '../redux/store'\n\nconst CurrentSplit = ({ split }) => {\n    if (!split) return null;\n\n    const { exercises = [], exerciseId = \"\" } = store.getState().workout;\n\n    const selectCurrentExercise = id => {\n        console.log(setCurrentExercise(id))\n        store.dispatch(setCurrentExercise(id))\n    }\n\n    return (\n        <div className={cardStyleClasses}>\n            <ul className=\"w3-ul\">\n                {exercises.map(\n                    (e, i) => (\n                        <ExerciseItem\n                            activate={selectCurrentExercise}\n                            current={e.id === exerciseId}\n                            key={i}\n                            {...e} />\n                    )\n                )}\n            </ul>\n        </div>\n    );\n}\n\nexport default CurrentSplit;","import store from \"./store\"\nimport { setSplitIndex } from \"./actions\";\n\nexport const activateNextSplit = () => {\n    const { splitIndex = 0, splits = [] } = store.getState();\n    const nextIndex = (splitIndex + 1) % splits.length\n    store.dispatch(setSplitIndex(nextIndex))\n}\n\nexport const getLastWeightOfExercise = id => {\n    const { history = [] } = store.getState();\n    const weightsOfExercise = [\n        ...(history\n            .filter(item => item.exerciseId === id)\n            .map(item => item.weight)),\n        0\n    ]\n    return weightsOfExercise[0]\n}","import React from 'react'\nimport { getLastWeightOfExercise } from '../redux/utils';\nimport store from '../redux/store';\nimport { changeWeight } from '../redux/actions';\n\nconst Meta = ({ className, split, exercise = {} }) => {\n    const { name = \"\", id = \"\" } = exercise\n    const weight = getLastWeightOfExercise(id)\n    const confirmLastWeightAsRecent = () => store.dispatch(\n        changeWeight(id, weight)\n    )\n    return (\n        <div className={className}>\n            <h2>{split ? split.name : \"\"}</h2>\n            <h3>{name}</h3>\n            <p>letztes Gewicht:<b> {weight} kg </b></p>\n            <button\n                onClick={confirmLastWeightAsRecent}\n                className=\"w3-button w3-blue\">\n                Gewicht wiederverwenden\n                </button>\n        </div>\n    );\n}\n\nexport default Meta;","import React, { Component } from 'react'\nimport { cardStyleClasses } from '../App'\n\nexport default class Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            period: 1000 * 60,\n            ...props\n        }\n        this.start = this.start.bind(this)\n        this.reset = this.reset.bind(this)\n    }\n\n    start() {\n        const now = Date.now();\n        const finish = now + this.state.period\n        this.setState({ finish })\n\n        const intervalId = setInterval(() => this.forceUpdate(), 100)\n        this.setState({ intervalId })\n    }\n\n    reset() {\n        this.setState({ finish: undefined })\n        clearInterval(this.state.intervalId)\n    }\n\n    render() {\n        const timeLeft = this.state.finish - Date.now() || this.state.period\n        if (timeLeft < 0)\n            clearInterval(this.state.intervalId)\n\n        return (\n            <div className={cardStyleClasses}>\n                <h3>Timer</h3>\n                <h4\n                    className=\"w3-padding\"\n                    style={{ color: \"cornflowerblue\" }}>\n                    {(timeLeft > 0) ? (<span>\n                        {Math.floor((timeLeft / 1000 / 60) % 60).toFixed(0)}:\n                {(timeLeft / 1000 % 60).toFixed(2).padStart(5, '0')}\n                    </span>) : \"0:00\"}\n                </h4>\n                <button className=\"w3-button\" onClick={this.start}>Start</button>\n                <button className=\"w3-button\" onClick={this.reset}>Reset</button>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst Disc = ({ weight = 1, selected = false, addWeight = f => f }) => {\n    const onAddWeight = () => {\n        if (selected) addWeight(weight * -1);\n        else addWeight(weight);\n    }\n\n    return (\n        <svg height=\"100\" width=\"100\" onClick={onAddWeight} >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"40\"\n                fill={selected ? \"#2395F3\" : \"#fff\"}\n                stroke={selected ? \"white\" : \"lightgrey\"}\n                strokeWidth=\"3\"\n            />\n            <text\n                x=\"50%\"\n                y=\"50%\"\n                textAnchor=\"middle\"\n                stroke={selected ? \"white\" : \"black\"}\n                fill={selected ? \"white\" : \"black\"}\n                dy=\".3em\">\n                {weight}\n            </text>\n        </svg >\n    );\n}\n\nexport default Disc;","import React from 'react';\nimport Disc from './Disc';\n\nconst parseSumToDiscs = (sum, discs) =>\n    discs.reduce(\n        (accumulator, currentValue) =>\n            sum >= (accumulator.reduce((acc, cv) => acc + cv, 0) + currentValue) ?\n                [...accumulator, currentValue]\n                : accumulator\n        , []);\n\nconst Weights = ({ sum = 0, displayedDiscs = [20, 10, 5, 4, 2.5, 2, 1.25, 1, 0.5],\n    addWeight = f => f, ...props }) => {\n\n    const selectedDiscs = parseSumToDiscs(sum, displayedDiscs);\n    return (\n        <div {...props}>\n            <h3>{`Ausgewählt: ${sum} kg`}</h3>\n            {\n                displayedDiscs\n                    .sort((a, b) => (a === b) ? 0 : (a < b) ? 1 : -1)\n                    .map((d, i) => <Disc key={i} weight={d}\n                        selected={selectedDiscs.indexOf(d) > -1}\n                        addWeight={addWeight}\n                    />)\n            }\n        </div>\n    );\n}\n\nexport default Weights;\n\n","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport 'w3-css';\nimport './App.css';\nimport Editor from './editor/Editor';\nimport { addExercise, addSplit, addWorkout, hidePopUp, restoreDefaultSettings, showPopUp } from './redux/actions';\nimport { defaults, muscles } from './redux/constants';\nimport Settings from './settings/Settings';\nimport Start from './start/Start';\nimport Confirm from './ui/Confirm';\nimport PageTemplate from './ui/PageTemplate';\nimport Workout from './workout/Workout';\nimport Export from './export/Export';\nimport store from './redux/store'\n\nconst location = window.location;\nconst { protocol, host, pathname } = location;\nconst exerciseUrl = `${protocol}//${host}${pathname}/exercises.json`\n\n\nconst setup = () => {\n  store.dispatch(addWorkout());\n  store.dispatch(addSplit(\"Brust & Bizeps\", [muscles.BIZEPS, muscles.CHEST]));\n  store.dispatch(addSplit(\"Rücken & Trizeps\", [muscles.BACK, muscles.TRIZEPS]));\n  store.dispatch(addSplit(\"Beine & Schultern\", [muscles.LEGS, muscles.SHOULDER]));\n  fetch(exerciseUrl)\n    .then(response => response.json())\n    .then(data => data.reverse().map(\n      exercise => store.dispatch(\n        addExercise(exercise.name, exercise.muscles)\n      )\n    ))\n}\n\n\nconst isObjectEmpty = obj => !obj || !Object.keys(obj) || !Object.keys(obj).length;\n\nexport const cardStyleClasses = [\"w3-card\", \"w3-left-align\", \"w3-padding\", \"w3-display-container\"].join(' ');\nexport const flexCardRow = [\"w3-row\"].join(' ');\nexport const flexCardContainer = [\"w3-col\", \"s12 m6 l4\", \"w3-padding\"].join(' ');\n\nconst popup_id = \"TRANSITION_POPUP\";\nlet confirmMessage = \"\";\nlet confirmCallback;\nconst confirmTransition = (message, callback) => {\n  confirmMessage = message\n  store.dispatch(showPopUp(popup_id));\n  callback(false); confirmCallback = callback;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    store.subscribe(() => {\n      localStorage[defaults.LOCALSTORAGE_NAME] = JSON.stringify(store.getState());\n    });\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  componentWillMount() {\n    if (!localStorage.getItem(defaults.LOCALSTORAGE_NAME)) {\n      setup();\n    }\n    const { settings } = store.getState();\n    if (isObjectEmpty(settings)) {\n      store.dispatch(restoreDefaultSettings())\n    }\n  }\n\n  render() {\n    const { popUpId } = store.getState().ui;\n\n    return (\n      <div className=\"App\">\n        <HashRouter getUserConfirmation={confirmTransition}>\n          <PageTemplate>\n            <Route exact path=\"/\" component={Start} />\n            <Route path=\"/edit\" component={Editor} />\n            <Route path=\"/workout\" component={Workout} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/export\" component={Export} />\n            <Confirm\n              message={confirmMessage}\n              isVisible={popup_id === popUpId}\n              onAccept={() => confirmCallback(true)}\n              onDecline={() => confirmCallback(false)}\n              onHide={() => store.dispatch(hidePopUp())}\n            />\n          </PageTemplate>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { addHistoryEntry, cancelWorkout, changeWeight, startWorkout } from '../redux/actions';\nimport store from '../redux/store';\nimport FlexCardRow, { cardStyleClasses } from '../ui/FlexCardRow';\nimport CurrentSplit from './CurrentSplit';\nimport Meta from './Meta';\nimport Timer from './Timer';\nimport Weights from './Weights';\nimport { activateNextSplit } from '../redux/utils';\n\n\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addWeight = this.addWeight.bind(this);\n        this.start = this.start.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.finish = this.finish.bind(this);\n    }\n\n    componentWillMount() {\n        this.start();\n        this.isActive = true;\n        this.setState({\n            isPaused: false\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.isActive) {\n            this.cancel();\n        }\n        clearTimeout(this.timeout);\n    }\n\n    addWeight(value) {\n        const { exercises = [], exerciseId = \"\" } = store.getState().workout;\n        console.log(exerciseId, exercises)\n        const { weight = 0 } = exercises.find(e => e.id === exerciseId)\n\n        store.dispatch(\n            changeWeight(exerciseId, weight + value)\n        )\n    }\n\n    start() {\n        const { splitIndex, splits = [], exercises } = store.getState();\n        const split = splits[splitIndex];\n        const mappedExercises = split.exercises.map(id => ({\n            ...exercises.find(item => item.id === id)\n        }))\n\n        store.dispatch(startWorkout(mappedExercises));\n    }\n    cancel() {\n        store.dispatch(cancelWorkout());\n    }\n\n    finish() {\n        const { exercises = [] } = store.getState().workout;\n        this.isActive = false;\n        exercises.filter(e => !!e.weight).forEach(e => store.dispatch(\n            addHistoryEntry(e.id, e.weight)\n        ))\n        activateNextSplit()\n        window.location.hash = \"/\"\n    }\n\n    render() {\n        const { workout, splits = [], settings, splitIndex } = store.getState();\n        const { exercises = [], exerciseId = \"\" } = workout\n        const exercise = exercises.find(e => e.id === exerciseId);\n        const split = splits[splitIndex]\n\n        return (\n            <FlexCardRow>\n                <Meta\n                    className={cardStyleClasses}\n                    exercise={exercise}\n                    split={split}\n                />\n                <div className={cardStyleClasses}>\n                    <button\n                        onClick={this.finish}\n                        className=\"w3-button\">\n                        Training beenden und Gewichte speichern\n                    </button>\n                </div>\n                <CurrentSplit\n                    exerciseId={exerciseId}\n                    exercises={exercises}\n                    split={split}\n                />\n                <Timer className={cardStyleClasses}\n                />\n                <Weights\n                    sum={exercise.weight}\n                    className={`${cardStyleClasses}`}\n                    addWeight={this.addWeight}\n                    displayedDiscs={settings.displayedDiscs}\n                />\n                <Prompt when={this.isActive} message=\"Möchtest du dein Training wirklich abbrechen? Alle Fortschritte gehen verloren!\" />\n            </FlexCardRow>\n        )\n    }\n}\n\n\nexport default Workout;","import React from 'react'\nimport store from '../redux/store'\n\nconst Export = () => (\n    <div style={{ userSelect: \"all\" }} >\n        {JSON.stringify(store.getState())}\n    </div>\n);\n\nexport default Export;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    let deferredPrompt = e;\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice\n        .then((choiceResult) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n            deferredPrompt = null;\n        });\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}