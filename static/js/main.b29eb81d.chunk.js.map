{"version":3,"sources":["redux/constants.js","redux/actions.js","ui/AddDeleteButton.js","ui/MuscleTag.js","redux/reducers.js","HOCs/PopUp.js","redux/store.js","editor/Exercise.js","ui/FlexCardRow.js","editor/AddExerciseForm.js","editor/ExerciseList.js","editor/SplitItem.js","editor/Split.js","editor/WorkoutPlan.js","editor/Editor.js","ui/Confirm.js","settings/Reset.js","settings/RestoreDefaults.js","settings/DisplayedDisks.js","settings/SplitComposerItem.js","settings/SplitComposer.js","dropbox/Dropbox.js","settings/Settings.js","start/StartButton.js","start/NextSplit.js","icons/Dumbbell.js","icons/Barbell.js","workout/BellTypeIndicator.js","workout/ExerciseItem.js","start/ProtocolEntry.js","start/Protocol.js","start/Start.js","ui/MainMenu.js","ui/PageTemplate.js","workout/CurrentSplit.js","workout/Meta.js","redux/utils.js","workout/Timer.js","workout/Disc.js","workout/Weights.js","workout/BellTypeSelector.js","App.js","workout/Workout.js","export/Export.js","registerServiceWorker.js","index.js"],"names":["C","ADD_SPLIT","EDIT_SPLIT","DELETE_SPLIT","ADD_EXERCISE","SET_SPLITINDEX","START_WORKOUT","SET_CURRENT_EXERCISE","FINISH_WORKOUT","CANCEL_WORKOUT","ADD_WORKOUT","SELECT_EXERCISE","UNSELECT_EXERCISE","ADD_HISTORY_ENTRY","CHANGE_WEIGHT","TOGGLE_ADD_EXERCISE_FORM","CHANGE_TIMER_SETTINGS","RESTORE_DEFAULT_SETTINGS","SHOW_POPUP","HIDE_POPUP","CHANGE_DISPLAYED_DISCS","SET_BELL_TYPE","defaults","LOCALSTORAGE_NAME","UPLOAD_FILE_NAME","defaultSettings","timeBetweenSets","timeBetweenExercises","displayedDiscs","muscles","CHEST","BACK","LEGS","BIZEPS","TRIZEPS","SHOULDER","ABS","muscleLabels","muscleColors","bellTypes","addExercise","name","type","id","v4","selected","timestamp","Date","now","selectExercise","unselectExercise","addSplit","exercises","editSplit","deleteSplit","setSplitIndex","splitIndex","changeWeight","exerciseId","weight","setCurrentExercise","restoreDefaultSettings","showPopUp","hidePopUp","changeDisplayedDiscs","discs","AddDeleteButton","deleteMode","props","baseStyle","display","cursor","borderRadius","padding","margin","selectedStyle","border","opacity","unselectedStyle","backgroundColor","color","MuscleTag","m","muscle","style","className","ComposedComponent","showAddExerciseForm","state","action","historyEntry","bellType","exercise","split","find","indexOf","filter","e","store","createStore","combineReducers","logger","console","log","settings","map","splits","s","workout","item","ui","popUpId","history","localStorage","JSON","parse","undefined","Exercise","flexCardContainer","onClick","dispatch","cardStyleClasses","i","key","join","flexCardRow","FlexCardRow","children","Array","isArray","c","AddExerciseForm","_muscle","_name","toggleView","ref","el","placeholder","defaultValue","value","disabled","Object","keys","k","ExerciseList","getState","SplitItem","verticalAlign","Split","allExercises","splitExercises","ex","WorkoutPlan","Editor","isWorkoutEmpty","length","Confirm","onAccept","f","onDecline","onHide","message","stopPropagation","isVisible","Reset","setTimeout","clear","window","location","reload","RestoreDefaults","DisplayedDiscs","input","v","width","sort","n1","n2","d","n","generateSplitName","string","lastIndex","lastIndexOf","SplitComposerItem","unselectedMuscles","reselectExercises","forEach","maxWidth","newMuscles","onMuscleTagClick","onUnselectedMuscleTagClick","SplitComposer","values","reduce","c1","c2","accessToken","getItem","dbx","Dropbox","uploadStoreData","storeData","filesUpload","then","r","catch","err","downloadStoreData","filesDownload","path","res","importStoreData","fileBlob","blob","Error","reader","FileReader","onloadend","result","storeDump","readAsText","DropboxConnector","_input","onChange","setItem","Settings","DisplayedDisks","buttonStyle","fontSize","StartButton","NextSplit","_select","htmlFor","index","Dumbbell","height","viewBox","fill","transform","Barbell","BellTypeIndicator","Icon","selectIcon","ExerciseItem","current","activate","fontWeight","ProtocolEntry","day","entries","historyData","Protocol","recordsPerDay","h","toLocaleDateString","days","Start","to","textDecoration","activeStyle","borderBottom","icon","mdIcon","isActive","match","isExact","pathname","MainMenu","PageTemplate","CurrentSplit","selectCurrentExercise","Meta","getLastExerciseData","Timer","period","start","bind","reset","finish","this","setState","intervalId","setInterval","forceUpdate","clearInterval","timeLeft","Math","floor","toFixed","padStart","Component","Disc","addWeight","cx","cy","stroke","strokeWidth","x","y","textAnchor","dy","Weights","sum","selectedDiscs","accumulator","currentValue","acc","cv","parseSumToDiscs","a","b","BellTypeSelector","dumbbell","barbell","generateListener","labels","currentLabel","confirmCallback","Workout","cancel","isPaused","clearTimeout","timeout","mappedExercises","startWorkout","nextIndex","activateNextSplit","hash","when","Export","userSelect","stringify","protocol","host","exerciseUrl","setup","tags","addWorkout","fetch","response","json","data","reverse","confirmMessage","confirmTransition","callback","App","subscribe","obj","getUserConfirmation","exact","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","addEventListener","preventDefault","deferredPrompt","prompt","userChoice","choiceResult","outcome","ReactDOM","render","document","getElementById","URL","process","origin","status","headers","get","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b29eb81d.chunk.js","sourcesContent":["const C = {\n    ADD_SPLIT: \"ADD_SPLIT\",\n    EDIT_SPLIT: \"EDIT_SPLIT\",\n    DELETE_SPLIT: \"DELETE_SPLIT\",\n    ADD_EXERCISE: \"ADD_EXERCISE\",\n    SET_SPLITINDEX: \"SET_SPLITINDEX\",\n    START_WORKOUT: \"START_WORKOUT\",\n    SET_CURRENT_EXERCISE: \"SET_CURRENT_EXERCISE\",\n    FINISH_WORKOUT: \"FINISH_WORKOUT\",\n    CANCEL_WORKOUT: \"CANCEL_WORKOUT\",\n    ADD_WORKOUT: \"ADD_WORKOUT\",\n    SELECT_EXERCISE: \"SELECT_EXERCISE\",\n    UNSELECT_EXERCISE: \"UNSELECT_EXERCISE\",\n    ADD_HISTORY_ENTRY: \"ADD_HISTORY_ENTRY\",\n    CHANGE_WEIGHT: \"CHANGE_WEIGHT\",\n    TOGGLE_ADD_EXERCISE_FORM: \"TOGGLE_ADD_EXERCISE_FORM\",\n    CHANGE_TIMER_SETTINGS: \"CHANGE_TIMER_SETTINGS\",\n    RESTORE_DEFAULT_SETTINGS: \"RESTORE_DEFAULT_SETTINGS\",\n    SHOW_POPUP: \"SHOW_POPUP\",\n    HIDE_POPUP: \"HIDE_POPUP\",\n    CHANGE_DISPLAYED_DISCS: \"CHANGE_DISPLAYED_DISCS\",\n    SET_BELL_TYPE: \"SET_BELL_TYPE\",\n};\n\nexport default C;\n\nexport const defaults = {\n    LOCALSTORAGE_NAME: 'localWeights',\n    UPLOAD_FILE_NAME: 'storeDump.json'\n}\n\nexport const defaultSettings = {\n    timeBetweenSets: 1000 * 60,\n    timeBetweenExercises: 1000 * 60 * 3,\n    displayedDiscs: [20, 10, 5, 4, 2.5, 2, 1, 0.5]\n}\n\nexport const muscles = {\n    CHEST: \"CHEST\",\n    BACK: \"BACK\",\n    LEGS: \"LEGS\",\n    BIZEPS: \"BIZEPS\",\n    TRIZEPS: \"TRIZEPS\",\n    SHOULDER: \"SHOULDER\",\n    ABS: \"ABS\"\n}\n\nexport const muscleLabels = {\n    CHEST: \"Brust\",\n    BACK: \"Rücken\",\n    LEGS: \"Beine\",\n    BIZEPS: \"Bizeps\",\n    TRIZEPS: \"Trizeps\",\n    SHOULDER: \"Schultern\",\n    ABS: \"Bauch\"\n}\n\nexport const muscleColors = {\n    CHEST: \"blue\",\n    BACK: \"green\",\n    LEGS: \"red\",\n    BIZEPS: \"pink\",\n    TRIZEPS: \"purple\",\n    SHOULDER: \"yellow\",\n    ABS: \"indigo\"\n}\n\nexport const bellTypes = {\n    barbell: \"BARBELL\",\n    dumbbell: \"DUMBBELL\"\n}","import C, { defaultSettings } from './constants';\nimport { v4 } from 'uuid';\n\nexport const addExercise = (name, muscles) => ({\n    type: C.ADD_EXERCISE,\n    id: v4(),\n    name,\n    selected: false,\n    muscles,\n    timestamp: Date.now()\n});\n\nexport const selectExercise = (id, name, muscles) => ({\n    type: C.SELECT_EXERCISE,\n    id, name, muscles\n});\n\nexport const unselectExercise = (id, name, muscles) => ({\n    type: C.UNSELECT_EXERCISE,\n    id, name, muscles\n});\n\nexport const addWorkout = (name = \"Mein Plan\") => ({\n    type: C.ADD_WORKOUT,\n    id: v4(),\n    name,\n    timestamp: Date.now(),\n    tags: [],\n    splits: []\n});\n\nexport const toggleAddExerciseForm = () => ({ type: C.TOGGLE_ADD_EXERCISE_FORM });\n\nexport const addSplit = (name = \"split\", muscles = []) => ({\n    type: C.ADD_SPLIT,\n    name,\n    id: v4(),\n    exercises: [],\n    muscles\n});\n\nexport const editSplit = (id, name, muscles = []) => ({\n    type: C.EDIT_SPLIT,\n    id, name, muscles\n});\n\nexport const deleteSplit = id => ({\n    type: C.DELETE_SPLIT,\n    id\n});\n\nexport const setSplitIndex = splitIndex => ({\n    type: C.SET_SPLITINDEX,\n    splitIndex\n});\n\nexport const changeWeight = (exerciseId, weight) => ({\n    type: C.CHANGE_WEIGHT,\n    exerciseId, weight\n})\n\nexport const startWorkout = (exercises = []) => {\n    const exerciseId = [...exercises.map(e => e.id), \"\"][0];\n\n    return {\n        type: C.START_WORKOUT,\n        exercises, exerciseId\n    }\n}\n\nexport const setCurrentExercise = id => ({\n    type: C.SET_CURRENT_EXERCISE, id\n})\n\n\nexport const cancelWorkout = () => ({\n    type: C.CANCEL_WORKOUT\n});\n\nexport const finishWorkout = (splitIndex, splits = []) => ({\n    type: C.FINISH_WORKOUT,\n    splitIndex: (splitIndex + 1 % splits.length),\n    timestamp: Date.now()\n});\n\nexport const addHistoryEntry = (exerciseId, weight, bellType) => ({\n    type: C.ADD_HISTORY_ENTRY,\n    id: v4(),\n    exerciseId,\n    weight,\n    bellType,\n    timestamp: Date.now()\n});\n\nexport const changeTimerSettings = (timeBetweenSets, timeBetweenExercises) => ({\n    type: C.CHANGE_TIMER_SETTINGS,\n    timeBetweenExercises, timeBetweenSets\n});\n\nexport const restoreDefaultSettings = () => ({\n    type: C.RESTORE_DEFAULT_SETTINGS,\n    defaults: defaultSettings\n});\n\nexport const showPopUp = id => ({\n    type: C.SHOW_POPUP,\n    id\n});\n\nexport const hidePopUp = () => ({\n    type: C.HIDE_POPUP\n});\n\nexport const changeDisplayedDiscs = discs => ({\n    type: C.CHANGE_DISPLAYED_DISCS,\n    discs\n});\n\nexport const setBellType = (bellType, exerciseId) => ({\n    type: C.SET_BELL_TYPE, bellType, exerciseId\n})","import React from 'react'\n\nconst AddDeleteButton = ({ deleteMode, ...props }) => (\n    <div {...props}>\n        {\n            deleteMode ?\n                (<span>&times;</span>) :\n                (<span>&#x0002B;</span>)\n        }\n    </div>\n);\n\nexport default AddDeleteButton;","import React from 'react'\nimport { muscleColors } from '../redux/constants';\n\nconst color = m => muscleColors[m];\nconst baseStyle = {\n    display: \"inline-block\",\n    cursor: \"pointer\",\n    borderRadius: \"4px\",\n    padding: \"2px\",\n    margin: \"2px\",\n};\nconst selectedStyle = {\n    border: \"1px solid currentColor!important\",\n    opacity: 0.6\n};\nconst unselectedStyle = {\n    border: \"1px dashed black\",\n    backgroundColor: \"white\",\n    color: \"black\"\n};\n\nconst MuscleTag = ({ muscle, selected = true, ...props }) => (\n    <span\n        {...props}\n        style={{ ...baseStyle, ...(selected ? selectedStyle : unselectedStyle) }}\n        className={\n            selected ?\n                `w3-small w3-${color(muscle)} ${props.className}` :\n                props.className\n        } >\n        {muscle}\n    </span >\n);\n\nexport default MuscleTag;","import C from './constants';\n\nexport const logger = (state, action) => {\n    console.log(\"dispatch\", action.type);\n    return null;\n}\n\nexport const workout = (state = {}, action) => {\n    switch (action.type) {\n        case C.SET_CURRENT_EXERCISE:\n            return {\n                ...state,\n                exerciseId: action.id\n            }\n        case C.START_WORKOUT:\n            return {\n                exercises: action.exercises,\n                exerciseId: action.exerciseId\n            }\n        case C.CHANGE_WEIGHT:\n            return {\n                ...state,\n                exercises: state.exercises.map(\n                    item => item.id !== action.exerciseId ?\n                        item : { ...item, weight: action.weight }\n                )\n            }\n        case C.SET_BELL_TYPE:\n            return {\n                ...state,\n                exercises: state.exercises.map(\n                    item => item.id !== action.exerciseId ?\n                        item : { ...item, bellType: action.bellType }\n                )\n            }\n        case C.FINISH_WORKOUT:\n        case C.CANCEL_WORKOUT:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const exercises = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_EXERCISE:\n            return [\n                exercise(state, action),\n                ...state\n            ];\n        case C.SELECT_EXERCISE:\n        case C.UNSELECT_EXERCISE:\n            return state.map(\n                e => exercise(e, action)\n            );\n        default:\n            return state;\n    }\n};\n\nexport const splitIndex = (state = 0, action) => {\n    switch (action.type) {\n        case C.SET_SPLITINDEX:\n            return action.splitIndex\n        default:\n            return state;\n    }\n}\n\n// TODO: start from defaults but restore settings OR\n// TODO: store defaults in component props\nexport const settings = (state = {}, action) => {\n    switch (action.type) {\n        case C.CHANGE_TIMER_SETTINGS:\n            return {\n                ...state,\n                timeBetweenSets: action.timeBetweenSets,\n                timeBetweenExercises: action.timeBetweenExercises\n            }\n        case C.CHANGE_DISPLAYED_DISCS:\n            return {\n                ...state,\n                displayedDiscs: action.discs\n            }\n        case C.RESTORE_DEFAULT_SETTINGS:\n            return {\n                ...action.defaults\n            }\n        default:\n            return state;\n    }\n}\n\nexport const ui = (state = {}, action) => {\n    switch (action.type) {\n        case C.TOGGLE_ADD_EXERCISE_FORM:\n            return {\n                ...state,\n                showAddExerciseForm: showAddExerciseForm(state.showAddExerciseForm, action)\n            }\n        case C.SHOW_POPUP:\n            return {\n                ...state,\n                popUpId: action.id\n            }\n        case C.HIDE_POPUP:\n            return {\n                ...state,\n                popUpId: \"\"\n            }\n        default:\n            return {\n                ...state,\n                showAddExerciseForm: showAddExerciseForm(state.showAddExerciseForm, action),\n                popUpId: \"\"\n            };\n    }\n}\n\nexport const showAddExerciseForm = (state = false, action) => {\n    switch (action.type) {\n        case C.TOGGLE_ADD_EXERCISE_FORM:\n            return !state\n        default:\n            return state;\n    }\n}\n\nexport const history = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_HISTORY_ENTRY:\n            return [\n                historyEntry(state, action),\n                ...state\n            ];\n        default:\n            return state;\n    }\n};\n\nexport const historyEntry = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_HISTORY_ENTRY:\n            return {\n                id: action.id,\n                exerciseId: action.exerciseId,\n                weight: action.weight,\n                bellType: action.bellType,\n                timestamp: action.timestamp\n            }\n        default:\n            return state;\n    }\n}\n\nexport const exercise = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_EXERCISE:\n            let { name, muscles, id, timestamp } = action\n            return { name, muscles, id, timestamp }\n        case C.SELECT_EXERCISE:\n            return (state.id !== action.id) ?\n                state :\n                { ...state, selected: true }\n        case C.UNSELECT_EXERCISE:\n            return (state.id !== action.id) ?\n                state :\n                { ...state, selected: false }\n        default:\n            return state;\n    }\n};\n\nexport const splits = (state = [], action) => {\n    switch (action.type) {\n        case C.ADD_SPLIT:\n            return [\n                ...state,\n                split(state, action)\n            ];\n        case C.EDIT_SPLIT:\n            return state.map(s =>\n                split(s, action)\n            );\n        case C.DELETE_SPLIT:\n            return state.filter(split =>\n                split.id !== action.id\n            );\n        case C.SELECT_EXERCISE:\n        case C.UNSELECT_EXERCISE:\n            return state.map(\n                s => split(s, action)\n            );\n        default:\n            return state;\n    }\n};\n\nexport const split = (state = {}, action) => {\n    switch (action.type) {\n        case C.ADD_SPLIT:\n            return {\n                name: action.name,\n                id: action.id,\n                exercises: action.exercises,\n                muscles: action.muscles\n            };\n        case C.EDIT_SPLIT:\n            return state.id !== action.id ? {\n                ...state\n            } : {\n                    ...state,\n                    name: action.name,\n                    muscles: action.muscles\n                };\n        case C.SELECT_EXERCISE:\n            return !state.muscles.find(muscle => (action.muscles.indexOf(muscle) > -1)) ?\n                state :\n                {\n                    ...state,\n                    exercises: [\n                        ...state.exercises, action.id\n                    ]\n                }\n        case C.UNSELECT_EXERCISE:\n            return {\n                ...state,\n                exercises: state.exercises.filter(e => e !== action.id)\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport const weights = (state = [], action) => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}\n\nexport const weight = (state = {}, action) => {\n    switch (action.type) {\n\n        default:\n            return state;\n    }\n}","import React from 'react';\nimport './PopUp.css';\n\n\nexport default ComposedComponent => ({ isVisible, ...props }) => {\n    return (\n        <div className={`pop-up w3-padding w3-white w3-display-container ${isVisible ? \"visible\" : \"\"}`} >\n            <div className=\"w3-display-topright w3-padding\"\n                style={{ cursor: \"pointer\" }}\n                onClick={e => { e.stopPropagation(); props.onHide() }} >\n                <span className=\"w3-xlarge\">\n                    &times;\n                   </span>\n            </div>\n            <ComposedComponent {...props} />\n        </div >\n    );\n}","import { combineReducers, createStore } from 'redux';\nimport { exercises, history, logger, settings, splitIndex, ui, splits, workout } from './reducers';\n\nconst store = createStore(combineReducers({\n    logger,\n    settings,\n    exercises,\n    splits,\n    workout,\n    splitIndex,\n    ui,\n    history,\n}), (\n    localStorage['localWeights']) ?\n    JSON.parse(localStorage['localWeights']) :\n    undefined\n);\n\nexport default store","import React from 'react'\nimport { unselectExercise, selectExercise } from '../redux/actions';\nimport AddDeleteButton from '../ui/AddDeleteButton';\nimport MuscleTag from '../ui/MuscleTag';\nimport { flexCardContainer, cardStyleClasses } from '../App';\nimport store from '../redux/store'\n\nconst Exercise = ({ id, name, muscles, selected }) => {\n    const toggleSelect = ()=> store.dispatch(\n        selected ? \n        unselectExercise(id, name, muscles):\n        selectExercise(id, name, muscles)\n    );\n    \n    return (\n        <div className={flexCardContainer}>\n            <div \n                onClick={toggleSelect}\n                style ={{cursor: \"pointer\"}}\n                className={`${cardStyleClasses} w3-display-container\n                ${selected ? \"w3-blue\" : \"\"}\n                `}>\n                <p>{name}</p>\n                <AddDeleteButton \n                    className=\"w3-display-topright w3-padding, w3-button\n                    w3-hover-blue w3-large\"\n                    deleteMode={selected}/>\n                {muscles.map((m, i)=> (\n                    <MuscleTag muscle={m} key={i}/>\n                ))}\n            </div>\n        </div>\n);}\n\nexport default Exercise;","import React from 'react'\n\nexport const cardStyleClasses = [\"w3-card\", \"w3-left-align\", \"w3-padding\", \"w3-display-container\"].join(' ');\nexport const flexCardRow = [\"w3-row\"].join(' ');\nexport const flexCardContainer = [\"w3-col\", \"s12 m12 l4\", \"w3-padding\"].join(' ');\n\nconst FlexCardRow = ({ children }) => (\n    <div className={flexCardRow}>\n        {\n            Array.isArray(children) ?\n                children.filter(i => i).map(\n                    (c, i) => (\n                        <div className={flexCardContainer} key={i}>\n                            {c}\n                        </div>\n                    )\n                ) : (\n                    <div className={flexCardContainer}>\n                        {children}\n                    </div>\n                )\n        }\n    </div>\n);\n\nexport default FlexCardRow;","import React from 'react';\nimport { addExercise } from '../redux/actions';\nimport { muscles } from '../redux/constants';\nimport { cardStyleClasses } from '../ui/FlexCardRow';\nimport store from '../redux/store'\n\nconst AddExerciseForm = ({ toggleView }) => {\n    let _muscle, _name;\n    const submit = () => {\n        if (!_muscle.value || !_name.value) return;\n        store.dispatch(addExercise(_name.value, [_muscle.value]));\n        _name.value = _muscle.value = null\n    }\n\n    const cancel = () => {\n        _name.value = null;\n        _muscle.value = \"default\";\n        toggleView();\n    }\n\n    return (\n        <div className=\"w3-padding\">\n            <div className={cardStyleClasses}>\n                <input\n                    ref={el => _name = el}\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className=\"w3-input\" />\n                <select\n                    defaultValue=\"default\"\n                    ref={el => _muscle = el}\n                    className=\"w3-select w3-white\">\n                    <option value=\"default\" disabled >Muskelgruppe</option>\n                    {\n                        Object.keys(muscles).map(\n                            (k, i) => (\n                                <option value={muscles[k]} key={i}>\n                                    {muscles[k]}\n                                </option>\n                            )\n                        )\n                    }\n                </select>\n                <input type=\"button\" value=\"Hinzufügen\" className=\"w3-button\" onClick={submit} />\n                <input type=\"button\" value=\"Abbrechen\" className=\"w3-button\" onClick={cancel} />\n            </div>\n        </div >\n    );\n}\n\nexport default AddExerciseForm;","import React from 'react'\nimport Exercise from './Exercise';\nimport AddDeleteButton from '../ui/AddDeleteButton';\nimport AddExerciseForm from './AddExerciseForm';\nimport { toggleAddExerciseForm } from '../redux/actions';\nimport store from '../redux/store'\n\nconst ExerciseList = ({ exercises = [], className, style }) => {\n    const { showAddExerciseForm } = store.getState().ui\n    const toggleView = () => store.dispatch(toggleAddExerciseForm())\n    return (\n        <div className={className} style={style}>\n            <h2 className=\"w3-display-container\">\n                <span>\n                    Übungen\n            </span>\n                <AddDeleteButton\n                    onClick={toggleView}\n                    style={{ cursor: \"pointer\" }}\n                    deleteMode={showAddExerciseForm}\n                    className=\"w3-display-right\" />\n            </h2>\n            {\n                showAddExerciseForm ?\n                    <AddExerciseForm toggleView={toggleView} /> :\n                    null\n            }\n            {\n                exercises.map((e, i) => (\n                    <Exercise {...e} key={i} />\n                ))\n            }\n        </div>\n    );\n}\n\nexport default ExerciseList;","import React from 'react'\nimport { unselectExercise } from '../redux/actions';\nimport { muscleColors } from '../redux/constants';\nimport store from '../redux/store'\n\nconst SplitItem = ({ id, name, className, muscles=[] }) => (\n    < li className={className + \" w3-display-container\"}>\n        {\n            muscles.map((m, i) => (\n                <span\n                    key={i}\n                    className=\"w3-xlarge\"\n                    style={{\n                        verticalAlign: \"middle\",\n                        color: muscleColors[m]\n                    }}>&bull;</span>))\n        }\n        <span className=\"w3-padding\" >\n            {name}\n        </span>\n        <span className=\"w3-display-right\"\n            onClick={() => store.dispatch(unselectExercise(id))}>\n            <div className=\"w3-padding w3-button w3-hover-blue\n            w3-large\">\n                &times;\n            </div>\n        </span>\n    </li>\n);\n\nexport default SplitItem;","import React from 'react';\nimport SplitItem from './SplitItem';\nimport MuscleTag from '../ui/MuscleTag';\nimport store from '../redux/store'\n\nconst Split = ({ name, muscles, className, style, exercises = [] }) => {\n    // const splitExercises = store.getState().exercises.map(\n    //     e => exercises.indexOf(e.id) > -1 ? e : undefined\n    // ).filter(item => item)\n    const allExercises = store.getState().exercises;\n\n    const splitExercises = exercises.map(\n        e => allExercises.find(ex => ex.id === e)\n    );\n\n    return (\n        <div className={className} style={style}>\n            <h4>{name}</h4>\n            {muscles.map((m, i) => (\n                <MuscleTag muscle={m} key={i} />\n            ))}\n            <ul className=\"w3-ul\">\n                {splitExercises.map((e, i) => (\n                    <SplitItem {...e} key={i} className=\"w3-hover\" />\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Split;","import React from 'react';\nimport Split from './Split';\nimport { flexCardContainer, cardStyleClasses } from '../App';\n\nconst WorkoutPlan = ({ splits = [], className, style }) => (\n    <div className={className} style={style} >\n        <h2>Meine Splits</h2>\n        {splits.map((s, i) => (\n            <div className={`${flexCardContainer}`} key={i}>\n                <Split\n                    {...s}\n                    className={`${cardStyleClasses}`} />\n            </div>\n        ))}\n    </div>\n);\n\nexport default WorkoutPlan;","import React from 'react';\nimport ExerciseList from './ExerciseList';\nimport WorkoutPlan from './WorkoutPlan';\nimport { flexCardRow, cardStyleClasses, flexCardContainer } from '../App';\nimport store from '../redux/store'\n\nconst Editor = () => {\n    const { splits = [] } = store.getState();\n    const exercises = store.getState().exercises;\n    const isWorkoutEmpty = !store.getState().exercises\n        .map(e => e.selected).filter(e => e).length;\n\n    // TODO: splits \n    return (\n        <div>\n            {\n                isWorkoutEmpty ?\n                    (\n                        <div className={flexCardRow + \" w3-border-bottom\"}>\n                            <div className={flexCardContainer}>\n                                <div className={cardStyleClasses}>\n                                    <h3>Willkommen im Editor</h3>\n                                    <p>Hier siehst Du deine Splits und alle Übungen.</p>\n                                    <p>Du kannst die Übungen durch antippen deinem Trainingsplan hinzufügen.</p>\n                                </div>\n                            </div>\n                        </div>\n                    ) : \"\"\n            }\n            <WorkoutPlan\n                splits={splits}\n                className={`${flexCardRow} w3-border-bottom w3-row-padding`} />\n            <ExerciseList exercises={exercises} className=\"w3-row-padding\" />\n        </div>\n    );\n}\n\nexport default Editor;","import React from 'react';\nimport PopUp from '../HOCs/PopUp'\n\nconst _Confirm = ({ onAccept = f => f, onDecline = f => f, onHide = f => f, message }) => (\n    <div className=\"w3-white\" >\n        <p>{message}</p>\n        <div className=\"w3-display-bottomright w3-padding\">\n            <button\n                className=\"w3-button\"\n                onClick={e => {\n                    e.stopPropagation();\n                    onDecline();\n                    onHide();\n                }}>\n                Abbrechen\n            </button>\n            <button\n                className=\"w3-button w3-blue\"\n                onClick={e => {\n                    e.stopPropagation();\n                    onAccept();\n                    onHide();\n                }}>\n                Bestätigen\n            </button>\n        </div>\n    </div>\n);\n\nconst Confirm = PopUp(_Confirm);\n\nexport default Confirm;","import React from 'react'\nimport { defaults } from '../redux/constants';\nimport store from '../redux/store'\nimport { showPopUp, hidePopUp } from '../redux/actions';\nimport Confirm from '../ui/Confirm';\n\n\nconst Reset = ({ className, style }) => {\n\n    const clearLocalStorageAndReload = ()=>setTimeout(() => {\n        localStorage.clear(defaults.LOCALSTORAGE_NAME);\n        window.location.reload();\n    }, 500);\n\n    const id = \"RESET_APP\";\n    const onHide = () => store.dispatch(hidePopUp());\n    const showConfirm = () => store.dispatch(showPopUp(id));\n    const { popUpId } = store.getState().ui;\n    const isVisible = popUpId === id;\n\n\n    return (\n        <div className={className} style={style}\n            onClick={showConfirm}>\n            <span>\n                Reset\n            </span>\n            <Confirm\n                message=\"Die Anwendung komplett zurücksetzen?\"\n                onHide={onHide}\n                isVisible={isVisible}\n                onAccept={clearLocalStorageAndReload} />\n        </div>\n    );\n}\n\nexport default Reset;","import React from 'react';\nimport store from '../redux/store'\nimport { restoreDefaultSettings, showPopUp, hidePopUp } from '../redux/actions';\nimport Confirm from '../ui/Confirm';\n\n\nconst RestoreDefaults = ({ ...props }) => {\n    const restore = () => {\n        store.dispatch(restoreDefaultSettings());\n        window.location.reload();\n    }\n    const id = \"RESTORE_DEFAULTS_POPUP\";\n    const onHide = () => store.dispatch(hidePopUp());\n    const showConfirm = () => store.dispatch(showPopUp(id));\n    const { popUpId } = store.getState().ui;\n    const isVisible = popUpId === id;\n\n    return (\n        <div {...props}>\n            <div onClick={showConfirm}>\n                Restore Defaults\n            </div>\n            <Confirm\n                message=\"Standardwerte wiederherstellen?\"\n                onHide={onHide}\n                isVisible={isVisible}\n                onAccept={restore} />\n        </div>\n    );\n}\n\nexport default RestoreDefaults;","import React from 'react'\nimport store from '../redux/store'\nimport { changeDisplayedDiscs } from '../redux/actions';\n\nconst DisplayedDiscs = ({ ...props }) => {\n\n    let input;\n    const { displayedDiscs } = store.getState().settings;\n    const addWeight = () => store.dispatch(\n        changeDisplayedDiscs([\n            ...displayedDiscs, input.value\n        ].filter(i => i).sort((n1, n2) => n1 === n2 ? 0 : n1 > n2 ? -1 : 1))\n    );\n    const deleteWeight = value => store.dispatch(\n        changeDisplayedDiscs(displayedDiscs.filter(\n            n => n !== value\n        ))\n    );\n\n    return (\n        <div {...props}>\n            <h2>Gewichte anpassen</h2>\n            <input\n                className=\"w3-input\"\n                placeholder=\"neues Gewicht eingeben\"\n                type=\"number\"\n                ref={v => input = v}\n                name=\"newWeight\" />\n            <button className=\"w3-button\" style={{ width: \"100%\" }} onClick={addWeight}>\n                Hinzufügen\n            </button>\n            <ul className=\"w3-ul\">\n                {\n                    displayedDiscs ?\n                        displayedDiscs.map(\n                            (d, i) => (\n                                <li key={i} className=\"w3-display-container\">\n                                    <span>{d}</span>\n                                    <div className=\"w3-display-right w3-padding\"\n                                        onClick={() => deleteWeight(d)} >\n                                        &times;\n                                </div>\n                                </li>\n                            )\n                        ) : undefined\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default DisplayedDiscs;","import React from 'react'\nimport MuscleTag from '../ui/MuscleTag';\nimport store from '../redux/store'\nimport { deleteSplit, addSplit, editSplit, unselectExercise, selectExercise } from '../redux/actions';\nimport { muscleLabels } from '../redux/constants';\n\nconst generateSplitName = (muscles = []) => {\n    const string = muscles\n        .map(m => muscleLabels[m])\n        .join(\", \");\n    const lastIndex = string.lastIndexOf(\",\");\n    return [...string].map((s, i) => i !== lastIndex ? s : \" &\").join('');\n}\n\nconst SplitComposerItem = ({ id, name, muscles = [], unselectedMuscles = [] }) => {\n    const reselectExercises = () => {\n        const { exercises } = store.getState();\n        exercises.forEach(e => {\n            if (e.selected) {\n                const { id, name, muscles } = e;\n                store.dispatch(unselectExercise(id, name, muscles));\n                store.dispatch(selectExercise(id, name, muscles));\n            }\n        });\n    }\n\n    const onUnselectedMuscleTagClick = muscle => {\n        if (!!id) {\n            const newMuscles = [...muscles, muscle];\n            store.dispatch(editSplit(\n                id, generateSplitName(newMuscles), newMuscles))\n            reselectExercises();\n        } else {\n            store.dispatch(addSplit(\n                generateSplitName([muscle]), [muscle]\n            ))\n            reselectExercises();\n        }\n    }\n\n    const onMuscleTagClick = muscle => {\n        const newMuscles = muscles.filter(m => m !== muscle);\n        store.dispatch(editSplit(\n            id, generateSplitName(newMuscles), newMuscles\n        ));\n        if (!newMuscles.length) {\n            store.dispatch(deleteSplit(id));\n        }\n        reselectExercises();\n    }\n\n    return (\n        <li style={{ maxWidth: \"100%\" }} className=\"w3-display-container\">\n            <div\n                onClick={() => store.dispatch(deleteSplit(id))}\n                className=\"w3-display-right w3-padding w3-xlarge w3-button\">\n                <span>&times;</span>\n            </div>\n            <div style={{ width: \"80%\" }}>\n                <h3>{name}</h3>\n                {muscles.map((m, i) => (\n                    <MuscleTag\n                        onClick={() => onMuscleTagClick(m)}\n                        key={i}\n                        muscle={m}\n                        className=\"w3-large\"\n                    />\n                ))}\n                {unselectedMuscles.map((m, i) => (\n                    <MuscleTag\n                        onClick={() => onUnselectedMuscleTagClick(m)}\n                        selected={false}\n                        key={i}\n                        muscle={m}\n                        className=\"w3-large\"\n                    />\n                ))}\n            </div>\n        </li>\n    );\n}\n\nexport default SplitComposerItem;","import React from 'react'\nimport store from '../redux/store'\nimport SplitComposerItem from './SplitComposerItem';\nimport { muscles } from '../redux/constants';\n\nconst SplitComposer = ({ ...props }) => {\n    const { splits } = store.getState();\n    const unselectedMuscles = Object\n        .values(muscles)\n        .filter(m => !(splits\n            .map(s => [...s.muscles])\n            .reduce((c1, c2) => [...c1, ...c2], [])\n            .find(muscle => m === muscle)))\n\n    return (\n        <div  {...props}>\n            <h2>Splits konfigurieren</h2>\n            <ul className=\"w3-ul\">\n                {splits.map((s, i) => (\n                    <SplitComposerItem key={i} {...s}\n                        unselectedMuscles={unselectedMuscles} />\n                ))}\n                {(unselectedMuscles && unselectedMuscles.length) ?\n                    <SplitComposerItem\n                        name=\"neuer Split\"\n                        unselectedMuscles={unselectedMuscles}\n                    /> : null}\n            </ul>\n        </div>\n    );\n}\n\nexport default SplitComposer;","import React from 'react'\nimport { Dropbox } from 'dropbox'\nimport { defaults } from '../redux/constants'\n\nconst localStorage = window.localStorage\nconst accessToken = localStorage.getItem('accessToken')\n\nconst dbx = new Dropbox({\n    accessToken\n})\n\nconst uploadStoreData = () => {\n    const { LOCALSTORAGE_NAME, UPLOAD_FILE_NAME } = defaults\n    const storeData = localStorage[LOCALSTORAGE_NAME]\n\n    dbx.filesUpload({\n        \"path\": \"/\" + UPLOAD_FILE_NAME,\n        \"contents\": [storeData],\n        \"mode\": { \".tag\": \"overwrite\" }\n    })\n        .then(r => console.log(r))\n        .catch(err => console.log(err))\n}\n\nconst downloadStoreData = () => dbx.filesDownload({\n    path: \"/\" + defaults.UPLOAD_FILE_NAME\n})\n    .then(res => importStoreData(res.fileBlob))\n    .catch(err => console.log(err))\n\nconst importStoreData = blob => {\n    if (!blob)\n        throw new Error(\"no file found\")\n\n    const reader = new FileReader()\n    reader.onloadend = () => {\n        console.log(reader.result)\n        const storeDump = reader.result\n        if (storeDump)\n            localStorage[defaults.LOCALSTORAGE_NAME] = storeDump\n    }\n    reader.readAsText(blob)\n}\n\nwindow.dbx = dbx\n\nexport default function DropboxConnector({ ...props }) {\n    let _input;\n    const saveToken = () => localStorage.setItem(\n        \"accessToken\", _input.value\n    );\n\n\n    if (!accessToken)\n        return (<input ref={v => _input = v} onChange={saveToken} />)\n\n    return (\n        <div {...props}>\n            <h3>Dropbox</h3>\n            <span>Token: {accessToken}</span>\n            <button\n                onClick={uploadStoreData}\n                className=\"w3-button\">\n                Upload\n            </button>\n            <button\n                onClick={downloadStoreData}\n                className=\"w3-button\">\n                download\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\nimport FlexCardRow, { cardStyleClasses } from '../ui/FlexCardRow'\nimport Reset from './Reset';\nimport RestoreDefaults from './RestoreDefaults';\nimport DisplayedDisks from './DisplayedDisks';\nimport SplitComposer from './SplitComposer';\nimport DropboxConnector from '../dropbox/Dropbox';\n\nconst Settings = () => (\n    <FlexCardRow>\n        <DropboxConnector className={cardStyleClasses} />\n        <SplitComposer className={cardStyleClasses} />\n        <DisplayedDisks className={cardStyleClasses} />\n        <RestoreDefaults className={cardStyleClasses} />\n        <Reset className={cardStyleClasses} />\n    </FlexCardRow>\n);\n\nexport default Settings;","import React from 'react';\nimport { MdPlayArrow } from 'react-icons/lib/md';\n\nconst buttonStyle = {\n    fontSize: \"2em\"\n};\n\nconst StartButton = ({ className, ...props }) => (\n    <div className={className} {...props}>\n        <MdPlayArrow\n            style={buttonStyle}\n            className=\"w3-circle w3-border w3-margin\" />\n        <span>Jetzt starten</span>\n    </div>\n);\n\nexport default StartButton;","import React from 'react'\nimport store from '../redux/store'\nimport { setSplitIndex } from '../redux/actions'\n\nconst NextSplit = ({ ...props }) => {\n\n    let _select\n    const { splitIndex, splits } = store.getState();\n\n    const onChange = () => store.dispatch(setSplitIndex(_select.value))\n\n    return (\n        <div {...props}>\n            <label htmlFor=\"split-selector\">Nächste Einheit:</label>\n            <select\n                onChange={onChange}\n                ref={v => _select = v}\n                defaultValue={splitIndex}\n                name=\"split-selector\"\n                id=\"split-selector\"\n                className=\"w3-select w3-white\">\n                {splits.map((split, index) => (\n                    <option value={index} key={index}>{split.name}</option>\n                ))}\n            </select>\n\n        </div>\n    );\n}\n\nexport default NextSplit;","import React from 'react'\n\nconst Dumbbell = ({ style, ...props }) => (\n\n    <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 40 40\"\n        style={{ fill: \"currentColor\", verticalAlign: \"middle\", ...style }}\n        {...props}>\n        <g\n            style={{ display: \"inline\" }}\n            transform=\"translate(0,-24)\">\n            <path\n                d=\"m 9.1455329,32.553657 c -1.2548275,0 -2.2650315,1.010203 -2.2650315,2.265032 V 52.90477 c 0,1.254828 1.010204,2.265032 2.2650315,2.265032 1.2548281,0 2.2650311,-1.010204 2.2650311,-2.265032 v -7.013542 h 16.753424 v 7.013542 c 0,1.254828 1.010204,2.265032 2.265031,2.265032 h 0.07811 c 1.254828,0 2.265032,-1.010204 2.265032,-2.265032 V 34.818689 c 0,-1.254829 -1.010204,-2.265032 -2.265032,-2.265032 h -0.07811 c -1.254827,0 -2.265031,1.010203 -2.265031,2.265032 v 6.87564 H 11.410564 v -6.87564 c 0,-1.254829 -1.010203,-2.265032 -2.2650311,-2.265032 z m -5.0963208,3.452465 c -1.0276604,0 -1.8549827,0.827323 -1.8549827,1.854982 v 11.946333 c 0,1.027661 0.8273223,1.854983 1.8549827,1.854983 1.0276603,0 1.8549826,-0.827322 1.8549826,-1.854983 V 37.861104 c 0,-1.027659 -0.8273223,-1.854982 -1.8549826,-1.854982 z m 31.6323369,0 c -1.02766,0 -1.854983,0.827323 -1.854983,1.854982 v 11.946333 c 0,1.027661 0.827323,1.854983 1.854983,1.854983 1.02766,0 1.854983,-0.827322 1.854983,-1.854983 V 37.861104 c 0,-1.027659 -0.827323,-1.854982 -1.854983,-1.854982 z M 0.67119105,40.368993 c -0.36779425,0 -0.66388854,0.296094 -0.66388854,0.663887 v 5.602781 c 0,0.367794 0.29609429,0.663889 0.66388854,0.663889 0.36779425,0 0.66388845,-0.296095 0.66388845,-0.663889 V 41.03288 c 0,-0.367793 -0.2960942,-0.663887 -0.66388845,-0.663887 z m 38.62269295,0 c -0.38943,0 -0.702942,0.313512 -0.702942,0.702941 v 5.524675 c 0,0.389428 0.313512,0.702941 0.702942,0.702941 0.389429,0 0.702941,-0.313513 0.702941,-0.702941 v -5.524675 c 0,-0.389429 -0.313512,-0.702941 -0.702941,-0.702941 z\" />\n        </g>\n    </svg >\n\n);\n\nexport default Dumbbell;","import React from 'react'\n\nconst Barbell = ({ style, ...props }) => (\n    <svg\n        width=\"1em\"\n        height=\"1em\"\n        viewBox=\"0 0 40 40\"\n        style={{ fill: 'currentColor', verticalAlign: 'middle', ...style }}\n        {...props}>\n        <g style={{ display: \"inline\" }}>\n            <path\n                d=\"M 4.5527344 12.025391 C 3.7692601 12.025391 3.1386719 12.655979 3.1386719 13.439453 L 3.1386719 26.621094 C 3.1386719 27.404569 3.7692601 28.035156 4.5527344 28.035156 C 5.3362087 28.035156 5.9667969 27.404569 5.9667969 26.621094 L 5.9667969 21.173828 L 34.162109 21.173828 L 34.162109 26.664062 C 34.162109 27.447536 34.792698 28.078125 35.576172 28.078125 C 36.359647 28.078125 36.990234 27.447536 36.990234 26.664062 L 36.990234 13.484375 C 36.990234 12.700901 36.359647 12.068359 35.576172 12.068359 C 34.792698 12.068359 34.162109 12.700901 34.162109 13.484375 L 34.162109 18.863281 L 5.9667969 18.863281 L 5.9667969 13.439453 C 5.9667969 12.655979 5.3362087 12.025391 4.5527344 12.025391 z M 1.1484375 15.351562 C 0.51186485 15.351562 0 15.854348 0 16.480469 L 0 23.556641 C 0 24.182762 0.51186485 24.6875 1.1484375 24.6875 C 1.7850101 24.6875 2.2988281 24.182762 2.2988281 23.556641 L 2.2988281 16.480469 C 2.2988281 15.854348 1.7850101 15.351562 1.1484375 15.351562 z M 38.978516 15.394531 C 38.341943 15.394531 37.830078 15.899269 37.830078 16.525391 L 37.830078 23.601562 C 37.830078 24.227684 38.341943 24.732422 38.978516 24.732422 C 39.615088 24.732422 40.128906 24.227683 40.128906 23.601562 L 40.128906 16.525391 C 40.128906 15.899269 39.615088 15.394531 38.978516 15.394531 z \"\n            />\n        </g>\n    </svg >\n)\n\nexport default Barbell","import React from 'react'\nimport { bellTypes } from '../redux/constants'\nimport Dumbbell from '../icons/Dumbbell'\nimport Barbell from '../icons/Barbell'\n\n\nconst selectIcon = type => {\n    switch (type) {\n        case bellTypes.dumbbell:\n            return Dumbbell\n        case bellTypes.barbell:\n            return Barbell\n        default:\n            return undefined\n    }\n}\n\nconst BellTypeIndicator = ({ bellType, ...props }) => {\n    if (!bellType) return null\n    const Icon = selectIcon(bellType)\n\n    return (\n        <span {...props} className=\" w3-padding w3-round\">\n            <Icon style={{ height: \"2em\", width: \"2em\" }} />\n        </span>\n    )\n}\n\nexport default BellTypeIndicator","import React from 'react'\nimport { muscleColors } from '../redux/constants';\nimport BellTypeIndicator from './BellTypeIndicator';\n\nconst ExerciseItem = ({ id, current = false, muscles = [], name, weight, bellType, activate = f => f }) => (\n    <li\n        className=\"w3-display-container\"\n        onClick={() => activate(id)}\n        style={{ fontWeight: current ? \"bold\" : \"normal\" }}>\n        <span style={{ width: \"80%\", display: \"inline-block\" }}>\n            {muscles.map((m, i) => (\n                <span\n                    key={i}\n                    className=\"w3-xlarge\"\n                    style={{\n                        verticalAlign: \"middle\",\n                        color: muscleColors[m]\n                    }}>\n                    &bull;\n                </span>\n            ))}\n            <span className=\"w3-padding\" style={{\n                verticalAlign: \"middle\"\n            }}>\n                {name}\n            </span>\n        </span>\n        <span className=\"w3-display-right\">\n            {weight} {weight !== undefined ? \"kg\" : \"\"}\n            <BellTypeIndicator bellType={bellType} />\n        </span>\n    </li>\n);\n\nexport default ExerciseItem;","import React from 'react'\nimport store from '../redux/store'\nimport ExerciseItem from '../workout/ExerciseItem'\n\n\nconst ProtocolEntry = ({ day = \"\", entries = [], ...props }) => {\n    if (!day || !entries.length)\n        return null\n\n    const { exercises = [] } = store.getState()\n\n    const historyData = entries.map(e => ({\n        ...e,\n        ...exercises.find(ex => ex.id === e.exerciseId)\n    }))\n\n    return (\n        <div {...props}>\n            <h4>{day}</h4>\n            <ul className=\"w3-ul\">\n\n                {historyData.map((item, i) => (\n                    <ExerciseItem {...item} key={i} />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default ProtocolEntry","import React from 'react'\nimport store from '../redux/store';\nimport ProtocolEntry from './ProtocolEntry';\n\nconst Protocol = ({ ...props }) => {\n    const { history = [] } = store.getState()\n\n    if (!history.length)\n        return null\n\n    const recordsPerDay = history\n        .map(h => ({ ...h, day: (new Date(h.timestamp)).toLocaleDateString() }))\n        .reduce((days, item) => {\n            if (!days[item.day])\n                days[item.day] = []\n\n            days[item.day] = [\n                ...days[item.day],\n                item\n            ]\n            return days\n        }, {})\n\n\n    return (\n        <div {...props} >\n            <h3>Trainingsverlauf</h3>\n            {Object.keys(recordsPerDay).map((item, i) => (\n                <ProtocolEntry key={i} day={item} entries={recordsPerDay[item]} />\n            ))}\n        </div>\n    );\n}\n\nexport default Protocol;","import React from 'react';\nimport StartButton from './StartButton';\nimport NextSplit from './NextSplit';\nimport { Link } from 'react-router-dom'\nimport { cardStyleClasses, flexCardRow, flexCardContainer } from '../App';\nimport store from '../redux/store'\nimport { MdEdit } from 'react-icons/lib/md';\nimport FlexCardRow from '../ui/FlexCardRow';\nimport Protocol from './Protocol';\n\nconst Start = () => {\n    const isWorkoutEmpty = !store.getState().exercises.map(e => e.selected).filter(e => e).length;\n\n    if (isWorkoutEmpty)\n        return (\n            <div className={flexCardRow} >\n                <div className={flexCardContainer}>\n                    <div className={cardStyleClasses}>\n                        <Link to=\"/edit\" style={{ textDecoration: \"none\" }}>\n                            <div className=\"w3-display-container\">\n                                <div style={{ width: \"75%\" }}>\n                                    <p>Du hast noch keinen Trainingsplan.</p>\n                                    <p>Erstelle hier deinen ersten Trainingsplan.</p>\n                                </div>\n                                <div\n                                    style={{ padding: \"4px\" }}\n                                    className=\"w3-display-right w3-circle w3-blue\">\n                                    <MdEdit style={{ fontSize: \"3em\" }} />\n                                </div>\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        )\n    else\n        return (\n            <FlexCardRow>\n                <div className={cardStyleClasses}>\n                    <h2>Dein Training</h2>\n                    <ul className=\"w3-ul\">\n                        <li className=\"w3-padding\"><NextSplit /></li>\n                    </ul>\n                </div>\n                <div className={`${cardStyleClasses} w3-hover-blue`}>\n                    <Link to=\"/workout\" style={{ textDecoration: \"none\" }} >\n                        <StartButton className=\"w3-large\" />\n                    </Link>\n                </div>\n                <Protocol className={cardStyleClasses} />\n\n            </FlexCardRow>\n        );\n}\n\nexport default Start;","import React from 'react';\nimport { MdEdit, MdSettings } from 'react-icons/lib/md';\nimport { NavLink } from 'react-router-dom';\nimport Dumbbell from '../icons/Dumbbell.js';\n\nconst activeStyle = {\n    borderBottom: \"4px solid #2395F3\",\n    color: \"#2395F3\"\n}\n\nconst icon = {\n    width: \"1.5em\",\n    margin: \"0.5em\"\n}\n\nconst mdIcon = {\n    fontSize: \"1.25em\",\n}\n\nconst isActive = (match, location) => match.isExact || location.pathname === \"/workout\";\n\nconst MainMenu = () => (\n    <div className=\"w3-bar w3-white\">\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            isActive={isActive}\n            to=\"/\">\n            <Dumbbell style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Start\n            </span>\n        </NavLink>\n        {/* <NavLink\n            activeStyle={activeStyle}\n            style={{textDecoration: \"none\"}}\n            className=\"w3-bar-item\"\n            to=\"/stats\">\n            <img src={chart} style={icon} alt=\"\" />\n            <span className=\"w3-hide-small\">\n                Meine Statistik\n            </span>\n        </NavLink> */}\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            to=\"/edit\">\n            <MdEdit style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Editor\n            </span>\n        </NavLink>\n        <NavLink\n            activeStyle={activeStyle}\n            style={{ textDecoration: \"none\" }}\n            className=\"w3-bar-item\"\n            to=\"/settings\">\n            <MdSettings style={{ ...icon, ...mdIcon }} />\n            <span className=\"w3-hide-small\">\n                Einstellungen\n            </span>\n        </NavLink>\n    </div>\n)\n\nexport default MainMenu;","import React from 'react';\n\nimport MainMenu from './MainMenu';\n\nconst PageTemplate = ({ children }) => (\n    <div>\n        <MainMenu />\n        {children}\n    </div>\n)\n\nexport default PageTemplate;","import React from 'react';\nimport { cardStyleClasses } from '../ui/FlexCardRow';\nimport ExerciseItem from './ExerciseItem';\nimport { setCurrentExercise } from '../redux/actions';\nimport store from '../redux/store'\n\nconst CurrentSplit = ({ split }) => {\n    if (!split) return null;\n\n    const { exercises = [], exerciseId = \"\" } = store.getState().workout;\n\n    const selectCurrentExercise = id => {\n        console.log(setCurrentExercise(id))\n        store.dispatch(setCurrentExercise(id))\n    }\n\n    return (\n        <div className={cardStyleClasses}>\n            <ul className=\"w3-ul\">\n                {exercises.map(\n                    (e, i) => (\n                        <ExerciseItem\n                            activate={selectCurrentExercise}\n                            current={e.id === exerciseId}\n                            key={i}\n                            {...e} />\n                    )\n                )}\n            </ul>\n        </div>\n    );\n}\n\nexport default CurrentSplit;","import React from 'react'\nimport { getLastExerciseData } from '../redux/utils';\nimport store from '../redux/store';\nimport { changeWeight } from '../redux/actions';\nimport BellTypeIndicator from './BellTypeIndicator';\n\nconst Meta = ({ className, split, exercise = {} }) => {\n    const { name = \"\", id = \"\" } = exercise\n    const { weight = 0, bellType } = getLastExerciseData(id)\n    console.log(bellType)\n    // TODO: um belltype erweitern\n    const confirmLastWeightAsRecent = () => store.dispatch(\n        changeWeight(id, weight)\n    )\n    return (\n        <div className={className}>\n            <h2>{split ? split.name : \"\"}</h2>\n            <h3>{name}</h3>\n            <p>letztes Gewicht:<b> {weight} kg </b>\n                <BellTypeIndicator\n                    bellType={bellType} />\n            </p>\n            <button\n                onClick={confirmLastWeightAsRecent}\n                className=\"w3-button w3-blue\">\n                Gewicht wiederverwenden\n                </button>\n        </div>\n    );\n}\n\nexport default Meta;","import store from \"./store\"\nimport { setSplitIndex } from \"./actions\";\n\nexport const activateNextSplit = () => {\n    const { splitIndex = 0, splits = [] } = store.getState();\n    const nextIndex = (splitIndex + 1) % splits.length\n    store.dispatch(setSplitIndex(nextIndex))\n}\n\nexport const getLastExerciseData = id => {\n    const { history = [] } = store.getState();\n    const exerciseData = [\n        ...(history.filter(item => item.exerciseId === id)),\n        0\n    ]\n    return exerciseData[0]\n}","import React, { Component } from 'react'\nimport { cardStyleClasses } from '../App'\n\nexport default class Timer extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            period: 1000 * 60,\n            ...props\n        }\n        this.start = this.start.bind(this)\n        this.reset = this.reset.bind(this)\n    }\n\n    start() {\n        const now = Date.now();\n        const finish = now + this.state.period\n        this.setState({ finish })\n\n        const intervalId = setInterval(() => this.forceUpdate(), 100)\n        this.setState({ intervalId })\n    }\n\n    reset() {\n        this.setState({ finish: undefined })\n        clearInterval(this.state.intervalId)\n    }\n\n    render() {\n        const timeLeft = this.state.finish - Date.now() || this.state.period\n        if (timeLeft < 0)\n            clearInterval(this.state.intervalId)\n\n        return (\n            <div className={cardStyleClasses}>\n                <h3>Timer</h3>\n                <h4\n                    className=\"w3-padding\"\n                    style={{ color: \"cornflowerblue\" }}>\n                    {(timeLeft > 0) ? (<span>\n                        {Math.floor((timeLeft / 1000 / 60) % 60).toFixed(0)}:\n                {(timeLeft / 1000 % 60).toFixed(2).padStart(5, '0')}\n                    </span>) : \"0:00\"}\n                </h4>\n                <button className=\"w3-button\" onClick={this.start}>Start</button>\n                <button className=\"w3-button\" onClick={this.reset}>Reset</button>\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nconst Disc = ({ weight = 1, selected = false, addWeight = f => f }) => {\n    const onAddWeight = () => {\n        if (selected) addWeight(weight * -1);\n        else addWeight(weight);\n    }\n\n    return (\n        <svg height=\"100\" width=\"100\" onClick={onAddWeight} >\n            <circle\n                cx=\"50\"\n                cy=\"50\"\n                r=\"40\"\n                fill={selected ? \"#2395F3\" : \"#fff\"}\n                stroke={selected ? \"white\" : \"lightgrey\"}\n                strokeWidth=\"3\"\n            />\n            <text\n                x=\"50%\"\n                y=\"50%\"\n                textAnchor=\"middle\"\n                stroke={selected ? \"white\" : \"black\"}\n                fill={selected ? \"white\" : \"black\"}\n                dy=\".3em\">\n                {weight}\n            </text>\n        </svg >\n    );\n}\n\nexport default Disc;","import React from 'react';\nimport Disc from './Disc';\n\nconst parseSumToDiscs = (sum, discs) =>\n    discs.reduce(\n        (accumulator, currentValue) =>\n            sum >= (accumulator.reduce((acc, cv) => acc + cv, 0) + currentValue) ?\n                [...accumulator, currentValue]\n                : accumulator\n        , []);\n\nconst Weights = ({ sum = 0, displayedDiscs = [20, 10, 5, 4, 2.5, 2, 1.25, 1, 0.5],\n    addWeight = f => f, ...props }) => {\n\n    const selectedDiscs = parseSumToDiscs(sum, displayedDiscs);\n    return (\n        <div {...props}>\n            <h3>{`Ausgewählt: ${sum} kg`}</h3>\n            {\n                displayedDiscs\n                    .sort((a, b) => (a === b) ? 0 : (a < b) ? 1 : -1)\n                    .map((d, i) => <Disc key={i} weight={d}\n                        selected={selectedDiscs.indexOf(d) > -1}\n                        addWeight={addWeight}\n                    />)\n            }\n        </div>\n    );\n}\n\nexport default Weights;\n\n","import React from 'react'\nimport { bellTypes } from '../redux/constants'\nimport { setBellType } from '../redux/actions'\nimport store from '../redux/store'\nimport Dumbbell from '../icons/Dumbbell'\nimport Barbell from '../icons/Barbell'\n\n\nconst BellTypeSelector = ({ exercise = {}, ...props }) => {\n    const { dumbbell, barbell } = bellTypes\n    const { id = \"\" } = exercise\n    const generateListener = type => () => store.dispatch(setBellType(type, id))\n    const style = { height: \"2em\", width: \"2em\" }\n    const labels = {}\n    labels['undefined'] = \"Keine Auswahl\"\n    labels[bellTypes.barbell] = \"Langhantel\"\n    labels[bellTypes.dumbbell] = \"Kurzhantel\"\n    const currentLabel = labels[exercise.bellType]\n\n    return (\n        <div {...props}>\n            <h3>Hanteltyp wählen</h3>\n            <h4>{currentLabel}</h4>\n            <span className=\"w3-blue w3-round w3-padding w3-margin-right\">\n                <Barbell\n                    style={style}\n                    onClick={generateListener(barbell)} />\n            </span>\n            <span className=\"w3-blue w3-round w3-padding w3-margin-right\">\n                <Dumbbell\n                    style={style}\n                    onClick={generateListener(dumbbell)} />\n            </span>\n        </div>\n    )\n}\n\nexport default BellTypeSelector","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport 'w3-css';\nimport './App.css';\nimport Editor from './editor/Editor';\nimport { addExercise, addSplit, addWorkout, hidePopUp, restoreDefaultSettings, showPopUp } from './redux/actions';\nimport { defaults, muscles } from './redux/constants';\nimport Settings from './settings/Settings';\nimport Start from './start/Start';\nimport Confirm from './ui/Confirm';\nimport PageTemplate from './ui/PageTemplate';\nimport Workout from './workout/Workout';\nimport Export from './export/Export';\nimport store from './redux/store'\n\nconst location = window.location;\nconst { protocol, host, pathname } = location;\nconst exerciseUrl = `${protocol}//${host}${pathname}/exercises.json`\n\n\nconst setup = () => {\n  store.dispatch(addWorkout());\n  store.dispatch(addSplit(\"Brust & Bizeps\", [muscles.BIZEPS, muscles.CHEST]));\n  store.dispatch(addSplit(\"Rücken & Trizeps\", [muscles.BACK, muscles.TRIZEPS]));\n  store.dispatch(addSplit(\"Beine & Schultern\", [muscles.LEGS, muscles.SHOULDER]));\n  fetch(exerciseUrl)\n    .then(response => response.json())\n    .then(data => data.reverse().map(\n      exercise => store.dispatch(\n        addExercise(exercise.name, exercise.muscles)\n      )\n    ))\n}\n\n\nconst isObjectEmpty = obj => !obj || !Object.keys(obj) || !Object.keys(obj).length;\n\nexport const cardStyleClasses = [\"w3-card\", \"w3-left-align\", \"w3-padding\", \"w3-display-container\"].join(' ');\nexport const flexCardRow = [\"w3-row\"].join(' ');\nexport const flexCardContainer = [\"w3-col\", \"s12 m6 l4\", \"w3-padding\"].join(' ');\n\nconst popup_id = \"TRANSITION_POPUP\";\nlet confirmMessage = \"\";\nlet confirmCallback;\nconst confirmTransition = (message, callback) => {\n  confirmMessage = message\n  store.dispatch(showPopUp(popup_id));\n  callback(false); confirmCallback = callback;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    store.subscribe(() => {\n      localStorage[defaults.LOCALSTORAGE_NAME] = JSON.stringify(store.getState());\n    });\n    store.subscribe(() => this.forceUpdate());\n  }\n\n  componentWillMount() {\n    if (!localStorage.getItem(defaults.LOCALSTORAGE_NAME)) {\n      setup();\n    }\n    const { settings } = store.getState();\n    if (isObjectEmpty(settings)) {\n      store.dispatch(restoreDefaultSettings())\n    }\n  }\n\n  render() {\n    const { popUpId } = store.getState().ui;\n\n    return (\n      <div className=\"App\">\n        <HashRouter getUserConfirmation={confirmTransition}>\n          <PageTemplate>\n            <Route exact path=\"/\" component={Start} />\n            <Route path=\"/edit\" component={Editor} />\n            <Route path=\"/workout\" component={Workout} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/export\" component={Export} />\n            <Confirm\n              message={confirmMessage}\n              isVisible={popup_id === popUpId}\n              onAccept={() => confirmCallback(true)}\n              onDecline={() => confirmCallback(false)}\n              onHide={() => store.dispatch(hidePopUp())}\n            />\n          </PageTemplate>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport { addHistoryEntry, cancelWorkout, changeWeight, startWorkout } from '../redux/actions';\nimport store from '../redux/store';\nimport FlexCardRow, { cardStyleClasses } from '../ui/FlexCardRow';\nimport CurrentSplit from './CurrentSplit';\nimport Meta from './Meta';\nimport Timer from './Timer';\nimport Weights from './Weights';\nimport { activateNextSplit } from '../redux/utils';\nimport BellTypeSelector from './BellTypeSelector';\n\n\nclass Workout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addWeight = this.addWeight.bind(this);\n        this.start = this.start.bind(this);\n        this.cancel = this.cancel.bind(this);\n        this.finish = this.finish.bind(this);\n    }\n\n    componentWillMount() {\n        this.start();\n        this.isActive = true;\n        this.setState({\n            isPaused: false\n        })\n    }\n\n    componentWillUnmount() {\n        if (this.isActive) {\n            this.cancel();\n        }\n        clearTimeout(this.timeout);\n    }\n\n    addWeight(value) {\n        const { exercises = [], exerciseId = \"\" } = store.getState().workout;\n        console.log(exerciseId, exercises)\n        const { weight = 0 } = exercises.find(e => e.id === exerciseId)\n\n        store.dispatch(\n            changeWeight(exerciseId, weight + value)\n        )\n    }\n\n    start() {\n        const { splitIndex, splits = [], exercises } = store.getState();\n        const split = splits[splitIndex];\n        const mappedExercises = split.exercises.map(id => ({\n            ...exercises.find(item => item.id === id)\n        }))\n\n        store.dispatch(startWorkout(mappedExercises));\n    }\n    cancel() {\n        store.dispatch(cancelWorkout());\n    }\n\n    finish() {\n        const { exercises = [] } = store.getState().workout;\n        this.isActive = false;\n        exercises.filter(e => !!e.weight).forEach(e => store.dispatch(\n            addHistoryEntry(e.id, e.weight, e.bellType)\n        ))\n        activateNextSplit()\n        window.location.hash = \"/\"\n    }\n\n    render() {\n        const { workout, splits = [], settings, splitIndex } = store.getState();\n        const { exercises = [], exerciseId = \"\" } = workout\n        const exercise = exercises.find(e => e.id === exerciseId);\n        const split = splits[splitIndex]\n\n        return (\n            <FlexCardRow>\n                <Meta\n                    className={cardStyleClasses}\n                    exercise={exercise}\n                    split={split}\n                />\n                <CurrentSplit\n                    exerciseId={exerciseId}\n                    exercises={exercises}\n                    split={split}\n                />\n                <Timer className={cardStyleClasses}\n                />\n                <Weights\n                    sum={exercise.weight}\n                    className={`${cardStyleClasses}`}\n                    addWeight={this.addWeight}\n                    displayedDiscs={settings.displayedDiscs}\n                />\n                <BellTypeSelector\n                    exercise={exercise}\n                    className={`${cardStyleClasses}`} />\n                <div className={cardStyleClasses + \" w3-red\"}>\n                    <button\n                        onClick={this.finish}\n                        className=\"w3-button w3-hover-red\">\n                        Training beenden und Gewichte speichern\n                    </button>\n                </div>\n                <Prompt when={this.isActive} message=\"Möchtest du dein Training wirklich abbrechen? Alle Fortschritte gehen verloren!\" />\n            </FlexCardRow>\n        )\n    }\n}\n\n\nexport default Workout;","import React from 'react'\nimport store from '../redux/store'\n\nconst Export = () => (\n    <div style={{ userSelect: \"all\" }} >\n        {JSON.stringify(store.getState())}\n    </div>\n);\n\nexport default Export;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    let deferredPrompt = e;\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice\n        .then((choiceResult) => {\n            if (choiceResult.outcome === 'accepted') {\n                console.log('User accepted the A2HS prompt');\n            } else {\n                console.log('User dismissed the A2HS prompt');\n            }\n            deferredPrompt = null;\n        });\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}